{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _defineProperty from \"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\src\\\\components\\\\molecules\\\\Login\\\\Authentication.js\";\nimport React, { useCallback, useContext, useState, useEffect } from 'react';\nimport { Redirect } from 'react-router';\nimport { connect } from \"react-redux\";\nimport './Authentication.scss';\nimport Input from '../../atoms/Form/Input/Input';\nimport Button from '../../atoms/Button/Button';\nimport Spinner from '../../atoms/Spinner/Spinner';\nimport * as actions from '../../../store/actions';\nimport config from '../../../store/firebaseConfig';\nimport { AuthContext } from \"../../../Login1/Auth\";\n\nvar Authentication = function Authentication(_ref) {\n  var history = _ref.history;\n  var loginForm = {\n    email: {\n      elType: 'input',\n      elConfig: {\n        type: 'email',\n        placeholder: 'E-Mail-Adresse'\n      },\n      value: '',\n      validation: {\n        required: true,\n        isEmail: true\n      },\n      valid: false,\n      touched: false\n    },\n    password: {\n      elType: 'password',\n      elConfig: {\n        type: 'password',\n        placeholder: 'Passwort'\n      },\n      value: '',\n      validation: {\n        required: true,\n        minLength: 6\n      },\n      valid: false,\n      touched: false\n    }\n  };\n\n  var checkValidation = function checkValidation(value, rules) {\n    var isValid = true;\n\n    if (!rules) {\n      return true;\n    }\n\n    if (rules.required) {\n      isValid = value.trim() !== '' && isValid;\n    }\n\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n\n    if (rules.isEmail) {\n      var pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n      isValid = pattern.test(value) && isValid;\n    }\n\n    if (rules.isNumeric) {\n      var _pattern = /^\\d+$/;\n      isValid = _pattern.test(value) && isValid;\n    }\n\n    return isValid;\n  };\n\n  var inputChangedHandler = function inputChangedHandler(ev, formId) {\n    console.log(\"inputChangedHandler value - formId\", ev.target.value, formId); //touched, wenn user etwas eingegeben hat\n\n    var updatedControls = _objectSpread({}, loginForm, _defineProperty({}, formId, _objectSpread({}, loginForm[formId], {\n      value: ev.target.value,\n      valid: checkValidation(ev.target.value, loginForm[formId].validation),\n      touched: true\n    })));\n\n    console.log(\"updatedControls:: \", updatedControls); // loginForm: updatedControls;\n  };\n\n  var onSubmitFormHandler = useCallback(function _callee(event) {\n    var _event$target$element, email, password;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            event.preventDefault();\n            _event$target$element = event.target.elements, email = _event$target$element.email, password = _event$target$element.password;\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(config.auth().signInWithEmailAndPassword(email.value, password.value));\n\n          case 5:\n            history.push('/dashboard');\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](2);\n            console.log(\"ERROR LOGIN: \", _context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 8]]);\n  }, [history]); // const { currentUser } = useContext(AuthContext);\n  // if(currentUser) {\n  //    return <Redirect to={\"/\"} />;\n  // }\n\n  var loginFormEl = [];\n  var errorMessage = null;\n\n  for (var key in loginForm) {\n    loginFormEl.push({\n      id: key,\n      config: loginForm[key]\n    });\n  }\n\n  var form = loginFormEl.map(function (formEl) {\n    return React.createElement(Input, {\n      elType: formEl.config.elType,\n      key: formEl.id,\n      elConfig: formEl.elConfig,\n      value: formEl.config.value,\n      invalid: !formEl.config.valid,\n      shouldValidate: formEl.config.validation,\n      touched: formEl.config.touched,\n      label: formEl.config.elConfig.placeholder,\n      changed: function changed(ev) {\n        return inputChangedHandler(ev, formEl.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    });\n  }); // if(this.props.loading) {\n  //    form = <Spinner/>\n  //}\n  //if(this.props.error){\n  //   errorMessage = (\n  //      <p>{this.props.error.message}</p>\n  // )\n  // }\n\n  var authRedirect = null; // if (this.props.isAuthenticated) {\n  //    authRedirect = <Redirect to=\"/\"/>\n  //}\n\n  return React.createElement(\"div\", {\n    className: \"Auth\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, authRedirect, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"Login \"), errorMessage, React.createElement(\"form\", {\n    onSubmit: function onSubmit(ev) {\n      return onSubmitFormHandler(ev);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, form, React.createElement(Button, {\n    type: \"submit\",\n    btnType: \"Primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"Anmelden \")));\n};\n\nexport default Authentication;","map":{"version":3,"sources":["C:/Users/natali.kaefer/Workspace/kaefer-logistik/logistik-app/src/components/molecules/Login/Authentication.js"],"names":["React","useCallback","useContext","useState","useEffect","Redirect","connect","Input","Button","Spinner","actions","config","AuthContext","Authentication","history","loginForm","email","elType","elConfig","type","placeholder","value","validation","required","isEmail","valid","touched","password","minLength","checkValidation","rules","isValid","trim","length","maxLength","pattern","test","isNumeric","inputChangedHandler","ev","formId","console","log","target","updatedControls","onSubmitFormHandler","event","preventDefault","elements","auth","signInWithEmailAndPassword","push","loginFormEl","errorMessage","key","id","form","map","formEl","authRedirect"],"mappings":"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","sourcesContent":["import React, { useCallback, useContext, useState, useEffect } from 'react';\r\nimport { Redirect } from 'react-router';\r\n\r\nimport {connect} from \"react-redux\";\r\n\r\nimport  './Authentication.scss';\r\nimport Input from '../../atoms/Form/Input/Input'\r\nimport Button from '../../atoms/Button/Button';\r\nimport Spinner from '../../atoms/Spinner/Spinner'\r\nimport * as actions from '../../../store/actions'\r\nimport config from '../../../store/firebaseConfig';\r\nimport { AuthContext } from \"../../../Login1/Auth\";\r\n\r\n\r\nconst Authentication = ({ history }) => {\r\n\r\n    const loginForm = {\r\n                email: {\r\n                    elType: 'input',\r\n                    elConfig: {\r\n                        type: 'email',\r\n                        placeholder: 'E-Mail-Adresse'\r\n                    },\r\n                    value: '',\r\n                    validation: {\r\n                        required: true,\r\n                        isEmail: true\r\n                    },\r\n                    valid: false,\r\n                    touched: false\r\n                    \r\n                },\r\n                password: {\r\n                    elType: 'password',\r\n                    elConfig: {\r\n                        type: 'password',\r\n                        placeholder: 'Passwort'\r\n                    },\r\n                    value: '',\r\n                    validation: {\r\n                        required: true,\r\n                        minLength: 6\r\n                    },\r\n\r\n                    valid: false,\r\n                    touched: false\r\n                  \r\n                }\r\n            };\r\n\r\n    const checkValidation = (value, rules) => {\r\n        let isValid = true;\r\n    \r\n        if (!rules) {\r\n            return true;\r\n        }\r\n    \r\n        if(rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n        if(rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid\r\n        }\r\n        if(rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength &&  isValid\r\n        }\r\n        if (rules.isEmail) {\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n        if (rules.isNumeric) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n    \r\n        return isValid;\r\n    };\r\n    \r\n    const inputChangedHandler = (ev, formId) => {\r\n        console.log(\"inputChangedHandler value - formId\", ev.target.value, formId);\r\n        \r\n        //touched, wenn user etwas eingegeben hat\r\n        const updatedControls = {\r\n            ...loginForm,\r\n            [formId]: {\r\n                ...loginForm[formId],\r\n                value: ev.target.value,\r\n                valid: checkValidation(ev.target.value, loginForm[formId].validation),\r\n                touched: true\r\n            }\r\n        };\r\n        console.log(\"updatedControls:: \", updatedControls);\r\n\r\n        // loginForm: updatedControls;\r\n    };\r\n\r\n\r\n    const onSubmitFormHandler = useCallback(async event => {\r\n        event.preventDefault();\r\n        const { email, password } = event.target.elements;\r\n        try {\r\n            await config\r\n                .auth()\r\n                .signInWithEmailAndPassword(email.value, password.value);\r\n            history.push('/dashboard');\r\n        } catch (error) {\r\n            console.log(\"ERROR LOGIN: \", error);\r\n        }\r\n    },[history] );\r\n\r\n   // const { currentUser } = useContext(AuthContext);\r\n\r\n   // if(currentUser) {\r\n    //    return <Redirect to={\"/\"} />;\r\n   // }\r\n\r\n\r\n    const loginFormEl = [];\r\n    let errorMessage = null;\r\n        \r\n    for (let key in loginForm) {\r\n        loginFormEl.push({\r\n            id: key,\r\n            config: loginForm[key]\r\n        });\r\n    }\r\n        \r\n        \r\n    let form = loginFormEl.map( formEl => (\r\n        <Input\r\n            elType={formEl.config.elType}\r\n            key={formEl.id}\r\n            elConfig={formEl.elConfig}\r\n            value={formEl.config.value}\r\n            invalid={!formEl.config.valid}\r\n            shouldValidate={formEl.config.validation}\r\n            touched={formEl.config.touched}\r\n            label={formEl.config.elConfig.placeholder}\r\n            changed={(ev) => inputChangedHandler(ev, formEl.id)}\r\n        /> )\r\n    );\r\n        \r\n   // if(this.props.loading) {\r\n    //    form = <Spinner/>\r\n    //}\r\n\r\n  //if(this.props.error){\r\n    //   errorMessage = (\r\n     //      <p>{this.props.error.message}</p>\r\n      // )\r\n  // }\r\n       \r\n   let authRedirect = null;\r\n  // if (this.props.isAuthenticated) {\r\n    //    authRedirect = <Redirect to=\"/\"/>\r\n    //}\r\n      \r\n    return (\r\n        <div className=\"Auth\">\r\n            {authRedirect}\r\n            <h3>Login </h3>\r\n            {errorMessage}\r\n            <form  onSubmit={(ev) => onSubmitFormHandler(ev)}>\r\n                {form}\r\n                <Button\r\n                    type=\"submit\"\r\n                    btnType=\"Primary\"\r\n                >Anmelden </Button>\r\n            </form>\r\n\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\n\r\nexport default Authentication;\r\n"]},"metadata":{},"sourceType":"module"}