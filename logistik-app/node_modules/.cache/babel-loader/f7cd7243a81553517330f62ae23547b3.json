{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\src\\\\index.js\";\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from \"redux\"; // craete global state\n\nimport reduxThunk from 'redux-thunk'; // For asynchronous action, middleware libraries redux-thunk or redux-sage\n\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport allReducer from './store/reducers';\nvar composeEnhancers = (process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null) || compose; // STORE -> GLOBALIZED STATE\n//use applyMiddleware to add the thunk middleware to the store\n\nvar mystore = createStore(allReducer, composeEnhancers(applyMiddleware(reduxThunk)));\nvar app = React.createElement(Provider, {\n  store: mystore,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, React.createElement(BrowserRouter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n})));\nReactDOM.render(app, document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["C:/Users/natali.kaefer/Workspace/kaefer-logistik/logistik-app/src/index.js"],"names":["React","ReactDOM","BrowserRouter","Provider","createStore","applyMiddleware","compose","reduxThunk","App","serviceWorker","allReducer","composeEnhancers","process","env","NODE_ENV","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","mystore","app","render","document","getElementById","unregister"],"mappings":";AAAA,OAAO,yBAAP;AACA,OAAO,2BAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAAQC,WAAR,EAAqBC,eAArB,EAAsCC,OAAtC,QAAoD,OAApD,C,CAA6D;;AAC7D,OAAOC,UAAP,MAAuB,aAAvB,C,CAAuC;;AAEvC,OAAO,cAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AAEA,IAAMC,gBAAgB,GAAG,CAACC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GAAyCC,MAAM,CAACC,oCAAhD,GAAuF,IAAxF,KAAkGV,OAA3H,C,CAGA;AACA;;AACA,IAAMW,OAAO,GAAGb,WAAW,CACvBM,UADuB,EAEvBC,gBAAgB,CAACN,eAAe,CAACE,UAAD,CAAhB,CAFO,CAA3B;AAMA,IAAMW,GAAG,GACL,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ,CADJ;AAQAhB,QAAQ,CAACkB,MAAT,CAAgBD,GAAhB,EAAqBE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAArB,E,CAEA;AACA;AACA;;AACAZ,aAAa,CAACa,UAAd","sourcesContent":["import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport {createStore, applyMiddleware, compose} from \"redux\"; // craete global state\nimport reduxThunk from 'redux-thunk';  // For asynchronous action, middleware libraries redux-thunk or redux-sage\n\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport allReducer from './store/reducers';\n\nconst composeEnhancers = (process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null ) || compose;\n\n\n// STORE -> GLOBALIZED STATE\n//use applyMiddleware to add the thunk middleware to the store\nconst mystore = createStore (\n    allReducer,\n    composeEnhancers(applyMiddleware(reduxThunk))\n);\n\n\nconst app = (\n    <Provider store={mystore}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}