{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from '../axios-instance';\nexport var authStart = function authStart() {\n  return {\n    type: actionTypes.AUTH_START\n  };\n}; //localId = userId, es ist derselbe\n\nexport var authSuccess = function authSuccess(token, user) {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    tokenId: token,\n    userId: user\n  };\n};\nexport var authFail = function authFail(error) {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport var logout = function logout() {\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport var checkAuthTimeout = function checkAuthTimeout(expirationTime) {\n  return function (dispatch) {\n    setTimeout(function () {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\nexport var setAuthRedirectPath = function setAuthRedirectPath(path) {\n  return {\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\n    path: path\n  };\n};\nexport var auth = function auth(email, password) {\n  var url = '';\n  return function (dispatch) {\n    dispatch(authStart());\n    var authData = {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    }; //let url = '/login.json';\n\n    url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAmhzVv7rmmeaHvUQTugalEmi1W4OSXjzQ'; // url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAmhzVv7rmmeaHvUQTugalEmi1W4OSXjzQ';\n\n    axios.post(url, authData).then(function (response) {\n      console.log('response: ', response);\n      console.log('authData: ', authData);\n      dispatch(authSuccess(response.data.idToken, response.data.localId));\n      dispatch(checkAuthTimeout(response.data.expiresIn));\n    }).catch(function (error) {\n      console.log('error', error);\n      dispatch(authFail(error.response));\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/natali.kaefer/Workspace/kaefer-logistik/logistik-app/src/store/actions/auth.js"],"names":["actionTypes","axios","authStart","type","AUTH_START","authSuccess","token","user","AUTH_SUCCESS","tokenId","userId","authFail","error","AUTH_FAIL","logout","AUTH_LOGOUT","checkAuthTimeout","expirationTime","dispatch","setTimeout","setAuthRedirectPath","path","SET_AUTH_REDIRECT_PATH","auth","email","password","url","authData","returnSecureToken","post","then","response","console","log","data","idToken","localId","expiresIn","catch"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAC3B,SAAO;AACHC,IAAAA,IAAI,EAAEH,WAAW,CAACI;AADf,GAAP;AAGH,CAJM,C,CAMP;;AACA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAQC,IAAR,EAAiB;AACxC,SAAO;AACHJ,IAAAA,IAAI,EAAEH,WAAW,CAACQ,YADf;AAEHC,IAAAA,OAAO,EAAEH,KAFN;AAGHI,IAAAA,MAAM,EAAEH;AAHL,GAAP;AAKH,CANM;AAQP,OAAO,IAAMI,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAC/B,SAAO;AACHT,IAAAA,IAAI,EAAEH,WAAW,CAACa,SADf;AAEHD,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALM;AAOP,OAAO,IAAME,MAAM,GAAG,SAATA,MAAS,GAAM;AACvB,SAAO;AACHX,IAAAA,IAAI,EAAEH,WAAW,CAACe;AADf,GAAP;AAGJ,CAJM;AAMP,OAAO,IAAMC,gBAAgB,GAAI,SAApBA,gBAAoB,CAACC,cAAD,EAAoB;AACjD,SAAO,UAAAC,QAAQ,EAAI;AACfC,IAAAA,UAAU,CAAC,YAAM;AACbD,MAAAA,QAAQ,CAACJ,MAAM,EAAP,CAAR;AACH,KAFS,EAEPG,cAAc,GAAG,IAFV,CAAV;AAGH,GAJD;AAKH,CANM;AAQP,OAAO,IAAMG,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,IAAD,EAAU;AACzC,SAAO;AACHlB,IAAAA,IAAI,EAAEH,WAAW,CAACsB,sBADf;AAEHD,IAAAA,IAAI,EAAEA;AAFH,GAAP;AAIH,CALM;AAOP,OAAO,IAAOE,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAQC,QAAR,EAAqB;AACtC,MAAIC,GAAG,GAAG,EAAV;AACA,SAAO,UAAAR,QAAQ,EAAI;AACfA,IAAAA,QAAQ,CAAChB,SAAS,EAAV,CAAR;AAEA,QAAMyB,QAAQ,GAAG;AACbH,MAAAA,KAAK,EAAEA,KADM;AAEbC,MAAAA,QAAQ,EAAEA,QAFG;AAGbG,MAAAA,iBAAiB,EAAE;AAHN,KAAjB,CAHe,CASf;;AACCF,IAAAA,GAAG,GAAG,uGAAN,CAVc,CAaZ;;AAGFzB,IAAAA,KAAK,CAAC4B,IAAN,CAAWH,GAAX,EAAgBC,QAAhB,EACIG,IADJ,CACS,UAAAC,QAAQ,EAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,QAA1B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BN,QAA1B;AACAT,MAAAA,QAAQ,CAACb,WAAW,CAAC0B,QAAQ,CAACG,IAAT,CAAcC,OAAf,EAAwBJ,QAAQ,CAACG,IAAT,CAAcE,OAAtC,CAAZ,CAAR;AACAlB,MAAAA,QAAQ,CAACF,gBAAgB,CAACe,QAAQ,CAACG,IAAT,CAAcG,SAAf,CAAjB,CAAR;AAEH,KAPJ,EAQIC,KARJ,CAQU,UAAA1B,KAAK,EAAI;AACZoB,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBrB,KAArB;AACAM,MAAAA,QAAQ,CAACP,QAAQ,CAACC,KAAK,CAACmB,QAAP,CAAT,CAAR;AACH,KAXJ;AAYJ,GA5BD;AA6BH,CA/BM","sourcesContent":["import * as actionTypes from './actionTypes';\r\nimport axios from '../axios-instance';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    }\r\n};\r\n\r\n//localId = userId, es ist derselbe\r\nexport const authSuccess = (token, user) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        tokenId: token,\r\n        userId: user\r\n    }\r\n};\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    }\r\n};\r\n\r\nexport const logout = () => {\r\n     return {\r\n         type: actionTypes.AUTH_LOGOUT\r\n     }\r\n};\r\n\r\nexport const checkAuthTimeout =  (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, expirationTime * 1000);\r\n    };\r\n};\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path: path\r\n    }\r\n};\r\n\r\nexport const  auth = (email, password) => {\r\n    let url = '';\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        \r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        };\r\n    \r\n        //let url = '/login.json';\r\n         url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAmhzVv7rmmeaHvUQTugalEmi1W4OSXjzQ';\r\n         \r\n\r\n           // url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAmhzVv7rmmeaHvUQTugalEmi1W4OSXjzQ';\r\n\r\n        \r\n         axios.post(url, authData)\r\n            .then(response => {\r\n                console.log('response: ', response);\r\n                console.log('authData: ', authData);\r\n                dispatch(authSuccess(response.data.idToken, response.data.localId ));\r\n                dispatch(checkAuthTimeout(response.data.expiresIn));\r\n                \r\n            })\r\n            .catch(error => {\r\n                console.log('error', error);\r\n                dispatch(authFail(error.response ));\r\n            });\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}