{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\src\\\\components\\\\molecules\\\\Modal\\\\Modal.js\";\n\nimport React, { useState } from 'react';\nimport ModalTrigger from \"./ModalTrigger/ModalTrigger\";\nimport ModalContent from \"./ModalContent/ModalContent\";\n\nvar Modal = function Modal(props) {\n  var _React$createElement;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isShown = _useState2[0],\n      setIsShown = _useState2[1];\n\n  var showModal = function showModal() {\n    console.log('--showModal--');\n    setIsShown(true);\n    toggleScrollLock();\n  };\n\n  var closeModal = function closeModal() {\n    console.log('--closeModal--');\n    setIsShown(true); //TriggerButton.focus();\n\n    toggleScrollLock();\n  };\n\n  var onKeyDown = function onKeyDown(event) {\n    console.log('--onKeyDown--');\n\n    if (event.key === 'Enter') {\n      closeModal();\n    }\n  };\n\n  var onClickOutside = function onClickOutside(event) {\n    console.log('--onClickOutside--');\n    if (_this.modal && _this.modal.contains(event.target)) return;\n    closeModal();\n  };\n\n  var toggleScrollLock = function toggleScrollLock() {\n    console.log('--toggleScrollLock--');\n    document.querySelector('body').classList.toggle('scroll-lock');\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(ModalTrigger, (_React$createElement = {\n    showModal: showModal,\n    buttonRef: function buttonRef(ev) {\n      return _this.TriggerButton = ev;\n    }\n  }, _defineProperty(_React$createElement, \"buttonRef\", function buttonRef(ev) {\n    return _this.TriggerButton = ev;\n  }), _defineProperty(_React$createElement, \"triggerText\", props.buttonText), _defineProperty(_React$createElement, \"awesomeIcon\", props.awesomeIcon), _defineProperty(_React$createElement, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement)), isShown ? React.createElement(ModalContent, {\n    modalRef: function modalRef(ev) {\n      return _this.modal = ev;\n    },\n    buttonRef: function buttonRef(ev) {\n      return _this.closeButton = ev;\n    },\n    closeModal: closeModal,\n    content: props.modalContent,\n    onKeyDown: onKeyDown,\n    onClickOutside: onClickOutside,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }) : null);\n};\n\nexport default Modal;","map":{"version":3,"sources":["C:/Users/natali.kaefer/Workspace/kaefer-logistik/logistik-app/src/components/molecules/Modal/Modal.js"],"names":["React","useState","ModalTrigger","ModalContent","Modal","props","isShown","setIsShown","showModal","console","log","toggleScrollLock","closeModal","onKeyDown","event","key","onClickOutside","modal","contains","target","document","querySelector","classList","toggle","ev","TriggerButton","buttonText","awesomeIcon","closeButton","modalContent"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAU;AAAA;;AAAA,kBACUJ,QAAQ,CAAC,KAAD,CADlB;AAAA;AAAA,MACbK,OADa;AAAA,MACJC,UADI;;AAIpB,MAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAH,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAI,IAAAA,gBAAgB;AACnB,GAJD;;AAMA,MAAOC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACtBH,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAH,IAAAA,UAAU,CAAC,IAAD,CAAV,CAFsB,CAGtB;;AACAI,IAAAA,gBAAgB;AACnB,GALD;;AAOA,MAAME,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK,EAAI;AACvBL,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;;AACA,QAAII,KAAK,CAACC,GAAN,KAAc,OAAlB,EAA2B;AACvBH,MAAAA,UAAU;AACb;AACJ,GALD;;AAOA,MAAMI,cAAc,GAAG,SAAjBA,cAAiB,CAAAF,KAAK,EAAI;AAC5BL,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,QAAI,KAAI,CAACO,KAAL,IAAc,KAAI,CAACA,KAAL,CAAWC,QAAX,CAAoBJ,KAAK,CAACK,MAA1B,CAAlB,EAAqD;AACrDP,IAAAA,UAAU;AACb,GAJD;;AAMA,MAAMD,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC3BF,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAU,IAAAA,QAAQ,CAACC,aAAT,CAAuB,MAAvB,EAA+BC,SAA/B,CAAyCC,MAAzC,CAAgD,aAAhD;AACH,GAHD;;AAKA,SACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,YAAD;AACI,IAAA,SAAS,EAAGf,SADhB;AAEI,IAAA,SAAS,EAAE,mBAAAgB,EAAE;AAAA,aAAK,KAAI,CAACC,aAAL,GAAqBD,EAA1B;AAAA;AAFjB,wDAGe,mBAAAA,EAAE;AAAA,WAAK,KAAI,CAACC,aAAL,GAAqBD,EAA1B;AAAA,GAHjB,wDAIiBnB,KAAK,CAACqB,UAJvB,wDAKiBrB,KAAK,CAACsB,WALvB;AAAA;AAAA;AAAA,mFAFJ,EAUQrB,OAAO,GACH,oBAAC,YAAD;AACI,IAAA,QAAQ,EAAE,kBAAAkB,EAAE;AAAA,aAAK,KAAI,CAACP,KAAL,GAAaO,EAAlB;AAAA,KADhB;AAEI,IAAA,SAAS,EAAE,mBAAAA,EAAE;AAAA,aAAK,KAAI,CAACI,WAAL,GAAmBJ,EAAxB;AAAA,KAFjB;AAGI,IAAA,UAAU,EAAEZ,UAHhB;AAII,IAAA,OAAO,EAAGP,KAAK,CAACwB,YAJpB;AAKI,IAAA,SAAS,EAAEhB,SALf;AAMI,IAAA,cAAc,EAAEG,cANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,GASF,IAnBb,CADJ;AA0BH,CA7DD;;AA+DA,eAAeZ,KAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport ModalTrigger from \"./ModalTrigger/ModalTrigger\";\r\nimport ModalContent from \"./ModalContent/ModalContent\";\r\n\r\nconst Modal = (props) =>{\r\n    const [isShown, setIsShown] = useState(false);\r\n\r\n\r\n    const showModal = () => {\r\n        console.log('--showModal--');\r\n        setIsShown(true);\r\n        toggleScrollLock();\r\n    };\r\n    \r\n    const  closeModal = () => {\r\n        console.log('--closeModal--');\r\n        setIsShown(true);\r\n        //TriggerButton.focus();\r\n        toggleScrollLock();\r\n    };\r\n    \r\n    const onKeyDown = event => {\r\n        console.log('--onKeyDown--');\r\n        if (event.key === 'Enter') {\r\n            closeModal();\r\n        }\r\n    };\r\n    \r\n    const onClickOutside = event => {\r\n        console.log('--onClickOutside--');\r\n        if (this.modal && this.modal.contains(event.target)) return;\r\n        closeModal();\r\n    };\r\n    \r\n    const toggleScrollLock = () => {\r\n        console.log('--toggleScrollLock--');\r\n        document.querySelector('body').classList.toggle('scroll-lock');\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <ModalTrigger\r\n                showModal={ showModal }\r\n                buttonRef={ev => (this.TriggerButton = ev)}\r\n                buttonRef={ev => (this.TriggerButton = ev)}\r\n                triggerText={props.buttonText}\r\n                awesomeIcon={props.awesomeIcon}\r\n            />\r\n            {\r\n                isShown  ? (\r\n                    <ModalContent\r\n                        modalRef={ev => (this.modal = ev)}\r\n                        buttonRef={ev => (this.closeButton = ev)}\r\n                        closeModal={closeModal}\r\n                        content={ props.modalContent  }\r\n                        onKeyDown={onKeyDown}\r\n                        onClickOutside={onClickOutside}\r\n                    />\r\n                 ) : null\r\n\r\n            }\r\n\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Modal;\r\n"]},"metadata":{},"sourceType":"module"}