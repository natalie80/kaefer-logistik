{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _defineProperty from \"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\src\\\\containers\\\\Contact\\\\ContactForm\\\\ContactForm.js\";\nimport React, { Component } from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport nodemailer from 'nodemailer';\nimport axios from 'axios';\nimport Media from \"react-media\";\nimport './ContactForm.scss';\nimport Input from '../../../components/atoms/Form/Input/Input';\nimport { faAngleDoubleRight, faArrowAltCircleRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nvar ContactForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ContactForm, _Component);\n\n  function ContactForm(props) {\n    var _this;\n\n    _classCallCheck(this, ContactForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ContactForm).call(this, props));\n\n    _this.onChangedHandler = function (ev, inputIdentifier) {\n      console.log('onChangedHandler  ->  Field Name / value/ check ', inputIdentifier, ev.target.value, ev.target.checked);\n      console.log('Event  ', ev.target, ev.target.name);\n      var inputValue;\n      var gender;\n      if (inputIdentifier !== 'salutation_1' || inputIdentifier !== 'salutation_2') inputValue = ev.target.value;\n\n      var updatedForm = _objectSpread({}, _this.state.contactForm, _defineProperty({}, inputIdentifier, _objectSpread({}, _this.state.contactForm[inputIdentifier], {\n        value: inputValue,\n        valid: _this.checkValidation(ev.target.value, _this.state.contactForm[inputIdentifier].validation),\n        touched: true,\n        selected: ev.target.checked\n      })));\n\n      if (inputIdentifier === 'salutation_1' || inputIdentifier === 'salutation_2') {\n        _this.setState({\n          selected: ev.target.value\n        });\n\n        console.log('Radio Checked ', document.querySelector('input[name=Gender]:checked').value); //this.setState({gender: ev.target.name})\n      } // updatedForm.gender = document.querySelector('input[name=Gender]:checked').value;\n\n\n      console.log('---- updatedForm ----', updatedForm);\n\n      _this.setState({\n        contactForm: updatedForm\n      });\n    };\n\n    _this.state = {\n      contactForm: {\n        salutation_1: {\n          elType: 'radio',\n          elConfig: {\n            type: 'radio',\n            name: 'Frau'\n          },\n          value: 'Frau',\n          validation: {\n            required: false\n          },\n          valid: '',\n          label: 'Frau',\n          selected: true\n        },\n        salutation_2: {\n          elType: 'radio',\n          elConfig: {\n            type: 'radio',\n            name: 'Herr'\n          },\n          value: 'Herr',\n          validation: {\n            required: false\n          },\n          valid: '',\n          label: 'Herr',\n          selected: false\n        },\n        name: {\n          elType: 'input',\n          elConfig: {\n            type: 'text',\n            name: 'customerName',\n            placeholder: 'Name*'\n          },\n          value: '',\n          validation: {\n            required: true,\n            isString: true,\n            error: 'Bitte 端berpr端fen Sie Ihren Namen.'\n          },\n          valid: ''\n        },\n        email: {\n          elType: 'input',\n          elConfig: {\n            type: 'text',\n            name: 'customerEMail',\n            placeholder: 'E-Mail*'\n          },\n          value: '',\n          validation: {\n            required: true,\n            isEmail: true,\n            error: 'Bitte 端berpr端fen Sie Ihre E-Mail-Adresse.'\n          },\n          valid: ''\n        },\n        company: {\n          elType: 'input',\n          elConfig: {\n            type: 'text',\n            name: 'customerCompany',\n            placeholder: 'Unternehmen'\n          },\n          value: '',\n          validation: {\n            required: false\n          },\n          valid: ''\n        },\n        phone: {\n          elType: 'input',\n          elConfig: {\n            type: 'text',\n            name: 'customerPhone',\n            placeholder: 'Telefonnummer'\n          },\n          value: '',\n          validation: {\n            required: false,\n            isNumeric: true\n          },\n          valid: ''\n        },\n        subject: {\n          elType: 'input',\n          elConfig: {\n            type: 'text',\n            name: 'customerSubject',\n            placeholder: 'Betreff*'\n          },\n          value: '',\n          validation: {\n            required: true,\n            error: 'Bitte geben Sie den Betreff ein.'\n          },\n          valid: ''\n        },\n        message: {\n          elType: 'textarea',\n          elConfig: {\n            type: 'text',\n            name: 'customerMessage',\n            placeholder: 'Ihre Nachricht an uns*'\n          },\n          value: '',\n          validation: {\n            required: true,\n            error: 'Bitte geben Sie Ihren Nachricht ein.'\n          },\n          valid: ''\n        }\n      },\n      gender: '',\n      selected: 'radio-1',\n      formIsValid: false\n    };\n    _this.onSubmitHandler = _this.onSubmitHandler.bind(_assertThisInitialized(_this));\n    _this.onChangedHandler = _this.onChangedHandler.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ContactForm, [{\n    key: \"checkValidation\",\n    value: function checkValidation(value, rules) {\n      console.log('checkValidation value/rules', value, rules);\n      var isValid = false;\n\n      if (!rules) {\n        console.log('--ruels--');\n        return true;\n      }\n\n      if (rules.required) {\n        isValid = value.trim() !== '' ? true : false;\n\n        if (rules.isEmail) {\n          console.log(' --Mail-- ');\n          var pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n          isValid = value.search(pattern) == 0 ? true : false;\n        }\n\n        if (rules.isNumeric) {\n          console.log(' --isNumeric-- ');\n          var _pattern = /^\\d+$/;\n          isValid = value.search(_pattern) == 0 ? true : false;\n        }\n\n        if (rules.isString) {\n          console.log(' --isString-- ');\n          var _pattern2 = /^[a-zA-Z\\s]+$/;\n          isValid = value.search(_pattern2) == 0 ? true : false;\n        }\n      } else {\n        isValid = '';\n      }\n\n      console.log('---isValid--- ', isValid);\n      return isValid;\n    }\n  }, {\n    key: \"onSubmitHandler\",\n    value: function onSubmitHandler(ev) {\n      var formIsValid, formInValid, formData, formInput, formEl, form;\n      return _regeneratorRuntime.async(function onSubmitHandler$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log('--onSubmitHandler--', this.state);\n              ev.preventDefault();\n              formIsValid = false;\n              formInValid = false;\n              formData = {};\n\n              for (formEl in this.state.contactForm) {\n                if (this.state.contactForm.hasOwnProperty(formEl)) {\n                  console.log('Name: ', this.state.contactForm[formEl].elConfig.name);\n                  formInput = this.state.contactForm[formEl];\n                  formData[formEl] = formInput.value;\n\n                  if (formInput.validation.required) {\n                    if (formInput.valid) {\n                      console.log('--- Input Feld is Valid--- OK');\n                      formIsValid = true;\n                    } else {\n                      formInValid = true;\n                      this.formInputError(formInput);\n                      console.log('--- Input Feld is InValid--- ERROR SHOW');\n                    }\n                  } else {\n                    formIsValid = true;\n                    console.log('--- NOT  Required --- OK');\n                  }\n                }\n              }\n\n              console.log('--- formInValid ---', formInValid);\n\n              if (!formInValid) {\n                console.log('--- FORM SEND ---');\n              } else {\n                console.log('--- FORM NOT SEND  show error---');\n              }\n\n              formData['gender'] = this.state.gender;\n              console.log('---formData---', formData);\n              console.log('---Gender---', this.state.selected);\n              _context.next = 13;\n              return _regeneratorRuntime.awrap(axios.post('/api/send_email', {\n                formData: formData\n              }));\n\n            case 13:\n              form = _context.sent;\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"formInputError\",\n    value: function formInputError(inputEl) {\n      var inputElement = document.getElementsByClassName('InputEl');\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = inputElement[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n\n          if (item.getAttribute('name') === inputEl.elConfig.name) {\n            item.setAttribute('class', 'InputEl Invalid');\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"mytest\",\n    value: function mytest(e) {\n      console.log('---value---', e.target.value);\n      this.setState({\n        selected: e.target.value\n      });\n      console.log('Radio Checked ', document.querySelector('input[name=myRadio]:checked').value);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {// console.log('Radio ', document.querySelector('input[name=myRadio]:checked').value);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var formElementsArry = [];\n\n      for (var key in this.state.contactForm) {\n        if (this.state.contactForm.hasOwnProperty(key)) {\n          formElementsArry.push({\n            id: key,\n            config: this.state.contactForm[key]\n          });\n        }\n      }\n\n      var form = React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"Label\",\n        htmlFor: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, \"radio-1\"), React.createElement(\"input\", {\n        type: \"radio\",\n        id: \"radio-1\",\n        name: \"Gender\",\n        value: \"radio-1\",\n        checked: this.state.selected === 'radio-1',\n        onChange: function onChange(ev) {\n          return _this2.onChangedHandler(ev, 'salutation_1');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"Label\",\n        htmlFor: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, \"radio-2\"), React.createElement(\"input\", {\n        type: \"radio\",\n        id: \"radio-2\",\n        name: \"Gender\",\n        value: \"radio-2\",\n        checked: this.state.selected === 'radio-2',\n        onChange: function onChange(ev) {\n          return _this2.onChangedHandler(ev, 'salutation_2');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      })), formElementsArry.map(function (formEl) {\n        return React.createElement(Input, {\n          key: formEl.id,\n          elType: formEl.config.elType,\n          elConfig: formEl.config.elConfig,\n          value: formEl.config.value,\n          invalid: formEl.config.valid,\n          shouldValidate: formEl.config.validation,\n          changed: function changed(ev) {\n            return _this2.onChangedHandler(ev, formEl.id);\n          },\n          label: formEl.config.label,\n          checked: formEl.config.selected,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316\n          },\n          __self: this\n        });\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"Hint\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, \" * Markierte Pflichtfelder bitte unbedingt ausf\\xFCllen \"), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        className: \"Button\",\n        onClick: this.onSubmitHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, \"Absenden  \", React.createElement(FontAwesomeIcon, {\n        icon: faAngleDoubleRight,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }), \" \")));\n      return React.createElement(Media, {\n        queries: {\n          small: \"(max-width: 599px)\",\n          medium: \"(min-width: 600px) and (max-width: 1199px)\",\n          large: \"(min-width: 1200px)\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, function (matches) {\n        return React.createElement(\"div\", {\n          className: matches.large ? \"ContactForm\" : matches.medium || matches.small ? \"ContactForm_Mobile\" : null,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 351\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          className: \"Subheadline\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 352\n          },\n          __self: this\n        }, \"Kontaktformular\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 353\n          },\n          __self: this\n        }, \"Haben Sie eine Frage oder m\\xF6chten Sie aus einem Grund Kontakt mit uns aufnehmen. Dann hinterlassen Sie uns einfach eine Nachricht. Wir freuen uns auf Sie und werden schnellstm\\xF6glich einen Antwort geben.\"), React.createElement(\"div\", {\n          className: \"Form\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 354\n          },\n          __self: this\n        }, form));\n      });\n    }\n  }]);\n\n  return ContactForm;\n}(Component);\n\nexport default ContactForm;","map":{"version":3,"sources":["C:/Users/natali.kaefer/Workspace/kaefer-logistik/logistik-app/src/containers/Contact/ContactForm/ContactForm.js"],"names":["React","Component","Button","nodemailer","axios","Media","Input","faAngleDoubleRight","faArrowAltCircleRight","FontAwesomeIcon","ContactForm","props","onChangedHandler","ev","inputIdentifier","console","log","target","value","checked","name","inputValue","gender","updatedForm","state","contactForm","valid","checkValidation","validation","touched","selected","setState","document","querySelector","salutation_1","elType","elConfig","type","required","label","salutation_2","placeholder","isString","error","email","isEmail","company","phone","isNumeric","subject","message","formIsValid","onSubmitHandler","bind","rules","isValid","trim","pattern","search","preventDefault","formInValid","formData","formEl","hasOwnProperty","formInput","formInputError","post","form","inputEl","inputElement","getElementsByClassName","item","getAttribute","setAttribute","e","formElementsArry","key","push","id","config","map","small","medium","large","matches"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport  nodemailer   from 'nodemailer';\r\nimport axios from 'axios';\r\nimport Media from \"react-media\";\r\n\r\nimport  './ContactForm.scss';\r\nimport Input from '../../../components/atoms/Form/Input/Input'\r\nimport {faAngleDoubleRight, faArrowAltCircleRight} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\n\r\nclass ContactForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            contactForm: {\r\n                    salutation_1: {\r\n                        elType: 'radio',\r\n                        elConfig: {\r\n                            type: 'radio',\r\n                            name: 'Frau'\r\n                        },\r\n                        value: 'Frau',\r\n                        validation: {\r\n                            required: false\r\n                        },\r\n                        valid: '',\r\n                        label: 'Frau',\r\n                        selected: true\r\n                    },\r\n                    salutation_2: {\r\n                        elType: 'radio',\r\n                        elConfig: {\r\n                            type: 'radio',\r\n                            name: 'Herr'\r\n                        },\r\n                        value: 'Herr',\r\n                        validation: {\r\n                            required: false\r\n                        },\r\n                        valid: '',\r\n                        label: 'Herr',\r\n                        selected: false\r\n                    },\r\n                name: {\r\n                    elType: 'input',\r\n                    elConfig: {\r\n                        type: 'text',\r\n                        name: 'customerName',\r\n                        placeholder: 'Name*'\r\n                    },\r\n                    value: '',\r\n                    validation: {\r\n                        required: true,\r\n                        isString: true,\r\n                        error: 'Bitte 端berpr端fen Sie Ihren Namen.'\r\n                    },\r\n                    valid: ''\r\n                },\r\n                email: {\r\n                    elType: 'input',\r\n                    elConfig: {\r\n                        type: 'text',\r\n                        name: 'customerEMail',\r\n                        placeholder: 'E-Mail*'\r\n                    },\r\n                    value: '',\r\n                    validation: {\r\n                        required: true,\r\n                        isEmail: true,\r\n                        error: 'Bitte 端berpr端fen Sie Ihre E-Mail-Adresse.'\r\n                    },\r\n                    valid: ''\r\n                },\r\n                company: {\r\n                    elType: 'input',\r\n                    elConfig: {\r\n                        type: 'text',\r\n                        name: 'customerCompany',\r\n                        placeholder: 'Unternehmen'\r\n                    },\r\n                    value: '',\r\n                    validation: {\r\n                        required: false\r\n                    },\r\n                    valid: ''\r\n                },\r\n                phone: {\r\n                    elType: 'input',\r\n                    elConfig: {\r\n                        type: 'text',\r\n                        name: 'customerPhone',\r\n                        placeholder: 'Telefonnummer'\r\n                    },\r\n                    value: '',\r\n                    validation: {\r\n                        required: false,\r\n                        isNumeric: true\r\n                    },\r\n                    valid: ''\r\n                },\r\n                subject: {\r\n                    elType: 'input',\r\n                    elConfig: {\r\n                        type: 'text',\r\n                        name: 'customerSubject',\r\n                        placeholder: 'Betreff*'\r\n                    },\r\n                    value: '',\r\n                    validation: {\r\n                        required: true,\r\n                        error: 'Bitte geben Sie den Betreff ein.'\r\n                    },\r\n                    valid: ''\r\n                },\r\n                message: {\r\n                    elType: 'textarea',\r\n                    elConfig: {\r\n                        type: 'text',\r\n                        name: 'customerMessage',\r\n                        placeholder: 'Ihre Nachricht an uns*'\r\n                    },\r\n                    value: '',\r\n                    validation: {\r\n                        required: true,\r\n                        error: 'Bitte geben Sie Ihren Nachricht ein.'\r\n                    },\r\n                    valid: '',\r\n                }\r\n            },\r\n            gender: '',\r\n            selected: 'radio-1' ,\r\n            formIsValid: false\r\n        };\r\n        \r\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\r\n        this.onChangedHandler = this.onChangedHandler.bind(this);\r\n    }\r\n    \r\n    \r\n    onChangedHandler = (ev, inputIdentifier) => {\r\n        console.log('onChangedHandler  ->  Field Name / value/ check ', inputIdentifier, ev.target.value, ev.target.checked);\r\n        console.log('Event  ', ev.target , ev.target.name );\r\n\r\n        let inputValue;\r\n        let gender;\r\n        if(inputIdentifier !== 'salutation_1'  || inputIdentifier !== 'salutation_2')  inputValue = ev.target.value;\r\n\r\n        const updatedForm = {\r\n           ...this.state.contactForm,\r\n           [inputIdentifier]: {\r\n               ...this.state.contactForm[inputIdentifier],\r\n               value: inputValue,\r\n               valid: this.checkValidation(ev.target.value, this.state.contactForm[inputIdentifier].validation),\r\n               touched: true,\r\n               selected: ev.target.checked\r\n           }\r\n        };\r\n\r\n        if(inputIdentifier === 'salutation_1' || inputIdentifier === 'salutation_2' ){\r\n            this.setState({ selected: ev.target.value });\r\n            console.log('Radio Checked ', document.querySelector('input[name=Gender]:checked').value);\r\n\r\n            //this.setState({gender: ev.target.name})\r\n        }\r\n\r\n\r\n       // updatedForm.gender = document.querySelector('input[name=Gender]:checked').value;\r\n        \r\n        console.log('---- updatedForm ----', updatedForm);\r\n        this.setState({contactForm: updatedForm})\r\n\r\n        \r\n    };\r\n\r\n    checkValidation(value, rules) {\r\n        console.log('checkValidation value/rules', value, rules);\r\n        let isValid = false;\r\n        \r\n        if (!rules) {\r\n            console.log('--ruels--');\r\n            return true;\r\n        }\r\n\r\n        if(rules.required) {\r\n            isValid = value.trim() !== '' ? true : false;\r\n\r\n            if (rules.isEmail) {\r\n                console.log(' --Mail-- ');\r\n                const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n                isValid = value.search(pattern) == 0 ? true : false;\r\n            }\r\n            if (rules.isNumeric) {\r\n                console.log(' --isNumeric-- ');\r\n                const pattern = /^\\d+$/;\r\n                isValid = value.search(pattern) == 0 ? true : false;\r\n            }\r\n            if (rules.isString) {\r\n                console.log(' --isString-- ');\r\n                const pattern = /^[a-zA-Z\\s]+$/;\r\n                isValid = value.search(pattern) == 0 ? true : false;\r\n\r\n            }\r\n        } else {\r\n            isValid = '';\r\n        }\r\n        console.log('---isValid--- ',isValid);\r\n        \r\n        return isValid;\r\n    }\r\n    \r\n    async onSubmitHandler(ev) {\r\n        console.log('--onSubmitHandler--' ,this.state);\r\n        ev.preventDefault();\r\n\r\n        let formIsValid = false;\r\n        let formInValid = false;\r\n        const formData = {};\r\n        let formInput;\r\n        \r\n        for (let formEl in this.state.contactForm) {\r\n            if (this.state.contactForm.hasOwnProperty(formEl)) {\r\n                console.log('Name: ', this.state.contactForm[formEl].elConfig.name);\r\n\r\n                formInput = this.state.contactForm[formEl];\r\n                formData[formEl] = formInput.value;\r\n\r\n                if(formInput.validation.required) {\r\n\r\n                    if (formInput.valid) {\r\n                        console.log('--- Input Feld is Valid--- OK');\r\n                        formIsValid = true;\r\n                    } else {\r\n                        formInValid = true;\r\n                        this.formInputError(formInput);\r\n                        console.log('--- Input Feld is InValid--- ERROR SHOW');\r\n                    }\r\n                } else {\r\n                    formIsValid = true;\r\n                    console.log('--- NOT  Required --- OK');\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n\r\n        console.log('--- formInValid ---', formInValid);\r\n\r\n        if(!formInValid) {\r\n            console.log('--- FORM SEND ---');\r\n        } else {\r\n            console.log('--- FORM NOT SEND  show error---');\r\n        }\r\n\r\n        formData['gender'] = this.state.gender;\r\n        console.log('---formData---', formData);\r\n\r\n        console.log('---Gender---', this.state.selected);\r\n\r\n        const form = await axios.post('/api/send_email', {\r\n            formData\r\n        });\r\n\r\n        \r\n        //this.sendEmail(formData);\r\n        \r\n    };\r\n\r\n    formInputError(inputEl){\r\n        let inputElement = document.getElementsByClassName('InputEl');\r\n        for(let item of inputElement) {\r\n            if(item.getAttribute('name') === inputEl.elConfig.name){\r\n                item.setAttribute('class','InputEl Invalid')\r\n            }\r\n        }\r\n    };\r\n\r\n    mytest(e) {\r\n        console.log('---value---', e.target.value);\r\n       this.setState({ selected: e.target.value });\r\n       console.log('Radio Checked ', document.querySelector('input[name=myRadio]:checked').value);\r\n\r\n    }\r\n\r\n    componentDidUpdate () {\r\n       // console.log('Radio ', document.querySelector('input[name=myRadio]:checked').value);\r\n    }\r\n\r\n    render() {\r\n        const formElementsArry = [];\r\n        for (let key in this.state.contactForm) {\r\n            if (this.state.contactForm.hasOwnProperty(key)) {\r\n                formElementsArry.push({\r\n                    id: key,\r\n                    config: this.state.contactForm[key]\r\n                });\r\n            }\r\n        }\r\n        let form = (\r\n            <form>\r\n\r\n                <div>\r\n                    <label className=\"Label\" htmlFor=\"\">radio-1</label>\r\n                    <input type='radio' id='radio-1' name='Gender' value='radio-1'\r\n                           checked={this.state.selected === 'radio-1'} onChange = {(ev) => this.onChangedHandler(ev,'salutation_1')} />\r\n                    <br />\r\n                    <label className=\"Label\" htmlFor=\"\">radio-2</label>\r\n                    <input type='radio' id='radio-2' name='Gender' value='radio-2'\r\n                           checked={this.state.selected === 'radio-2'} onChange = {(ev) => this.onChangedHandler(ev,'salutation_2')} />\r\n                </div>\r\n\r\n                {\r\n                    formElementsArry.map(formEl => (\r\n                        <Input\r\n                            key={formEl.id}\r\n                            elType={formEl.config.elType}\r\n                            elConfig={formEl.config.elConfig}\r\n                            value={formEl.config.value}\r\n                            invalid={formEl.config.valid}\r\n                            shouldValidate={formEl.config.validation}\r\n                            changed={ (ev) => this.onChangedHandler(ev,formEl.id)}\r\n                            label={formEl.config.label}\r\n                            checked={formEl.config.selected}\r\n\r\n                        />\r\n                    ))\r\n                }\r\n                <div>\r\n                    <p className=\"Hint\"> * Markierte Pflichtfelder bitte unbedingt ausf端llen </p>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        className=\"Button\"\r\n                        onClick={this.onSubmitHandler}\r\n                    >Absenden  <FontAwesomeIcon icon={faAngleDoubleRight}/> </Button>\r\n    \r\n                </div>\r\n            </form>\r\n        );\r\n\r\n        return (\r\n            <Media queries={{\r\n                small: \"(max-width: 599px)\",\r\n                medium: \"(min-width: 600px) and (max-width: 1199px)\",\r\n                large: \"(min-width: 1200px)\"\r\n            }}>\r\n                { matches => (\r\n                    <div className={ matches.large ? \"ContactForm\" : (matches.medium || matches.small) ? \"ContactForm_Mobile\" : null }>\r\n                       <h2 className=\"Subheadline\">Kontaktformular</h2>\r\n                        <p>Haben Sie eine Frage oder m旦chten Sie aus einem Grund Kontakt mit uns aufnehmen. Dann hinterlassen Sie uns einfach eine Nachricht. Wir freuen uns auf Sie und werden schnellstm旦glich einen Antwort geben.</p>\r\n                        <div className=\"Form\">\r\n                            {form}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </Media>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}