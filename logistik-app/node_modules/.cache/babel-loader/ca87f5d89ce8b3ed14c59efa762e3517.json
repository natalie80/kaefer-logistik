{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _defineProperty from\"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import Button from\"@material-ui/core/Button\";import axios from'axios';import Media from\"react-media\";import'./ContactForm.scss';import Input from'../../../components/atoms/Form/Input/Input';import{faAngleDoubleRight}from\"@fortawesome/free-solid-svg-icons\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";var ContactForm=/*#__PURE__*/function(_Component){_inherits(ContactForm,_Component);function ContactForm(props){var _this;_classCallCheck(this,ContactForm);_this=_possibleConstructorReturn(this,_getPrototypeOf(ContactForm).call(this,props));_this.onChangedHandler=function(ev,inputIdentifier){console.log('onChangedHandler  ->  Field-Name / value/ check ',inputIdentifier,ev.target.value);var updatedForm=_objectSpread({},_this.state.contactForm,_defineProperty({},inputIdentifier,_objectSpread({},_this.state.contactForm[inputIdentifier],{value:ev.target.value,valid:_this.checkValidation(ev.target.value,_this.state.contactForm[inputIdentifier].validation),touched:true})));console.log('---- updatedForm ----',updatedForm);_this.setState({contactForm:updatedForm});};_this.onChangedHandlerRadio=function(ev){console.log('radio ev',ev.target.value);_this.setState({gender:ev.target.value});};_this.state={contactForm:{/**  salutation_1: {\r\n                        elType: 'radio',\r\n                        elConfig: {\r\n                            type: 'radio',\r\n                            name: 'Frau'\r\n                        },\r\n                        value: 'Frau',\r\n                        validation: {\r\n                            required: false\r\n                        },\r\n                        valid: '',\r\n                        label: 'Frau'\r\n                    },\r\n                    salutation_2: {\r\n                        elType: 'radio',\r\n                        elConfig: {\r\n                            type: 'radio',\r\n                            name: 'Herr'\r\n                        },\r\n                        value: 'Herr',\r\n                        validation: {\r\n                            required: false\r\n                        },\r\n                        valid: '',\r\n                        label: 'Herr'\r\n                    },**/name:{elType:'input',elConfig:{type:'text',name:'customerName',placeholder:'Name*'},value:'',validation:{required:true,isString:true,error:'Bitte 端berpr端fen Sie Ihren Namen.'},valid:''},email:{elType:'input',elConfig:{type:'text',name:'customerEMail',placeholder:'E-Mail*'},value:'',validation:{required:true,isEmail:true,error:'Bitte 端berpr端fen Sie Ihre E-Mail-Adresse.'},valid:''},company:{elType:'input',elConfig:{type:'text',name:'customerCompany',placeholder:'Unternehmen'},value:'',validation:{required:false},valid:''},phone:{elType:'input',elConfig:{type:'text',name:'customerPhone',placeholder:'Telefonnummer'},value:'',validation:{required:false,isNumeric:true},valid:''},subject:{elType:'input',elConfig:{type:'text',name:'customerSubject',placeholder:'Betreff*'},value:'',validation:{required:true,error:'Bitte geben Sie den Betreff ein.'},valid:''},message:{elType:'textarea',elConfig:{type:'text',name:'customerMessage',placeholder:'Ihre Nachricht an uns*'},value:'',validation:{required:true,error:'Bitte geben Sie Ihren Nachricht ein.'},valid:''}},gender:'Herr',formIsValid:false};_this.onSubmitHandler=_this.onSubmitHandler.bind(_assertThisInitialized(_this));_this.onChangedHandler=_this.onChangedHandler.bind(_assertThisInitialized(_this));return _this;}_createClass(ContactForm,[{key:\"checkValidation\",value:function checkValidation(value,rules){console.log('checkValidation value/rules',value,rules);var isValid=false;if(!rules){console.log('--ruels--');return true;}if(rules.required){isValid=value.trim()!==''?true:false;if(rules.isEmail){console.log(' --Mail-- ');var pattern=/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;isValid=value.search(pattern)==0?true:false;}if(rules.isNumeric){console.log(' --isNumeric-- ');var _pattern=/^\\d+$/;isValid=value.search(_pattern)==0?true:false;}if(rules.isString){console.log(' --isString-- ');var _pattern2=/^[a-zA-Z\\s]+$/;isValid=value.search(_pattern2)==0?true:false;}}else{isValid='';}console.log('---isValid--- ',isValid);return isValid;}},{key:\"onSubmitHandler\",value:function onSubmitHandler(ev){var formIsValid,formInValid,formData,formInput,formEl,form;return _regeneratorRuntime.async(function onSubmitHandler$(_context){while(1){switch(_context.prev=_context.next){case 0:ev.preventDefault();formIsValid=false;formInValid=false;formData={};for(formEl in this.state.contactForm){if(this.state.contactForm.hasOwnProperty(formEl)){console.log('Name: ',this.state.contactForm[formEl].elConfig.name);formInput=this.state.contactForm[formEl];formData[formEl]=formInput.value;if(formInput.validation.required){if(formInput.valid){console.log('--- Input Feld is Valid--- OK');formIsValid=true;}else{formInValid=true;this.formInputError(formInput);console.log('--- Input Feld is InValid--- ERROR SHOW');}}else{formIsValid=true;console.log('--- NOT  Required --- OK');}}}if(!formInValid){console.log('--- FORM SEND ---');}else{console.log('--- FORM NOT SEND  show error---');}formData['gender']=this.state.gender;console.log('------ formData ------',formData);_context.next=10;return _regeneratorRuntime.awrap(axios.post('/api/send_email',{formData:formData}));case 10:form=_context.sent;case 11:case\"end\":return _context.stop();}}},null,this);}},{key:\"resetForm\",value:function resetForm(){document.getElementById('contact-form').reset();}},{key:\"formInputError\",value:function formInputError(inputEl){var inputElement=document.getElementsByClassName('InputEl');var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=inputElement[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var item=_step.value;if(item.getAttribute('name')===inputEl.elConfig.name){item.setAttribute('class','InputEl Invalid');}}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return!=null){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}}},{key:\"render\",value:function render(){var _this2=this;var formElementsArry=[];for(var key in this.state.contactForm){if(this.state.contactForm.hasOwnProperty(key)){formElementsArry.push({id:key,config:this.state.contactForm[key]});}}var form=React.createElement(\"form\",null,React.createElement(\"div\",{className:\"CustomerSalutation\"},React.createElement(\"label\",{className:\"Label\",htmlFor:\"\"},\"Frau\"),React.createElement(\"input\",{type:\"radio\",id:\"salutation_1\",className:\"\",name:\"Gender\",value:\"Frau\",checked:this.state.gender==='Frau',onChange:function onChange(ev){return _this2.onChangedHandlerRadio(ev);}}),React.createElement(\"label\",{className:\"Label\",htmlFor:\"\"},\"Herr\"),React.createElement(\"input\",{type:\"radio\",id:\"salutation_2\",className:\"\",name:\"Gender\",value:\"Herr\",checked:this.state.gender==='Herr',onChange:function onChange(ev){return _this2.onChangedHandlerRadio(ev);}})),formElementsArry.map(function(formEl){return React.createElement(Input,{key:formEl.id,elKey:formEl.id,elType:formEl.config.elType,elConfig:formEl.config.elConfig,value:formEl.config.value,invalid:formEl.config.valid,shouldValidate:formEl.config.validation,changed:function changed(ev){return _this2.onChangedHandler(ev,formEl.id);},label:formEl.config.label});}),React.createElement(\"div\",null,React.createElement(\"p\",{className:\"Hint\"},\" * Markierte Pflichtfelder bitte unbedingt ausf\\xFCllen \"),React.createElement(Button,{variant:\"contained\",color:\"primary\",type:\"submit\",className:\"Button\",onClick:this.onSubmitHandler},\"Absenden  \",React.createElement(FontAwesomeIcon,{icon:faAngleDoubleRight}),\" \")));return React.createElement(Media,{queries:{small:\"(max-width: 599px)\",medium:\"(min-width: 600px) and (max-width: 1199px)\",large:\"(min-width: 1200px)\"}},function(matches){return React.createElement(\"div\",{className:matches.large?\"ContactForm\":matches.medium||matches.small?\"ContactForm_Mobile\":null},React.createElement(\"h2\",{className:\"Subheadline\"},\"Kontaktformular\"),React.createElement(\"p\",null,\"Haben Sie eine Frage oder m\\xF6chten Sie aus einem Grund Kontakt mit uns aufnehmen. Dann hinterlassen Sie uns einfach eine Nachricht. Wir freuen uns auf Sie und werden schnellstm\\xF6glich einen Antwort geben.\"),React.createElement(\"div\",{className:\"Form\"},form));});}}]);return ContactForm;}(Component);export default ContactForm;","map":{"version":3,"sources":["C:/Users/natali.kaefer/Workspace/kaefer-logistik/logistik-app/src/containers/Contact/ContactForm/ContactForm.js"],"names":["React","Component","Button","axios","Media","Input","faAngleDoubleRight","FontAwesomeIcon","ContactForm","props","onChangedHandler","ev","inputIdentifier","console","log","target","value","updatedForm","state","contactForm","valid","checkValidation","validation","touched","setState","onChangedHandlerRadio","gender","name","elType","elConfig","type","placeholder","required","isString","error","email","isEmail","company","phone","isNumeric","subject","message","formIsValid","onSubmitHandler","bind","rules","isValid","trim","pattern","search","preventDefault","formInValid","formData","formEl","hasOwnProperty","formInput","formInputError","post","form","document","getElementById","reset","inputEl","inputElement","getElementsByClassName","item","getAttribute","setAttribute","formElementsArry","key","push","id","config","map","label","small","medium","large","matches"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from 'axios';\r\nimport Media from \"react-media\";\r\n\r\nimport  './ContactForm.scss';\r\nimport Input from '../../../components/atoms/Form/Input/Input'\r\nimport {faAngleDoubleRight} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\n\r\nclass ContactForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            contactForm: {\r\n                  /**  salutation_1: {\r\n                        elType: 'radio',\r\n                        elConfig: {\r\n                            type: 'radio',\r\n                            name: 'Frau'\r\n                        },\r\n                        value: 'Frau',\r\n                        validation: {\r\n                            required: false\r\n                        },\r\n                        valid: '',\r\n                        label: 'Frau'\r\n                    },\r\n                    salutation_2: {\r\n                        elType: 'radio',\r\n                        elConfig: {\r\n                            type: 'radio',\r\n                            name: 'Herr'\r\n                        },\r\n                        value: 'Herr',\r\n                        validation: {\r\n                            required: false\r\n                        },\r\n                        valid: '',\r\n                        label: 'Herr'\r\n                    },**/\r\n                name: {\r\n                    elType: 'input',\r\n                    elConfig: {\r\n                        type: 'text',\r\n                        name: 'customerName',\r\n                        placeholder: 'Name*'\r\n                    },\r\n                    value: '',\r\n                    validation: {\r\n                        required: true,\r\n                        isString: true,\r\n                        error: 'Bitte 端berpr端fen Sie Ihren Namen.'\r\n                    },\r\n                    valid: ''\r\n                },\r\n                email: {\r\n                    elType: 'input',\r\n                    elConfig: {\r\n                        type: 'text',\r\n                        name: 'customerEMail',\r\n                        placeholder: 'E-Mail*'\r\n                    },\r\n                    value: '',\r\n                    validation: {\r\n                        required: true,\r\n                        isEmail: true,\r\n                        error: 'Bitte 端berpr端fen Sie Ihre E-Mail-Adresse.'\r\n                    },\r\n                    valid: ''\r\n                },\r\n                company: {\r\n                    elType: 'input',\r\n                    elConfig: {\r\n                        type: 'text',\r\n                        name: 'customerCompany',\r\n                        placeholder: 'Unternehmen'\r\n                    },\r\n                    value: '',\r\n                    validation: {\r\n                        required: false\r\n                    },\r\n                    valid: ''\r\n                },\r\n                phone: {\r\n                    elType: 'input',\r\n                    elConfig: {\r\n                        type: 'text',\r\n                        name: 'customerPhone',\r\n                        placeholder: 'Telefonnummer'\r\n                    },\r\n                    value: '',\r\n                    validation: {\r\n                        required: false,\r\n                        isNumeric: true\r\n                    },\r\n                    valid: ''\r\n                },\r\n                subject: {\r\n                    elType: 'input',\r\n                    elConfig: {\r\n                        type: 'text',\r\n                        name: 'customerSubject',\r\n                        placeholder: 'Betreff*'\r\n                    },\r\n                    value: '',\r\n                    validation: {\r\n                        required: true,\r\n                        error: 'Bitte geben Sie den Betreff ein.'\r\n                    },\r\n                    valid: ''\r\n                },\r\n                message: {\r\n                    elType: 'textarea',\r\n                    elConfig: {\r\n                        type: 'text',\r\n                        name: 'customerMessage',\r\n                        placeholder: 'Ihre Nachricht an uns*'\r\n                    },\r\n                    value: '',\r\n                    validation: {\r\n                        required: true,\r\n                        error: 'Bitte geben Sie Ihren Nachricht ein.'\r\n                    },\r\n                    valid: '',\r\n                }\r\n            },\r\n            gender: 'Herr' ,\r\n            formIsValid: false\r\n        };\r\n        \r\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\r\n        this.onChangedHandler = this.onChangedHandler.bind(this);\r\n    }\r\n    \r\n    \r\n    onChangedHandler = (ev, inputIdentifier) => {\r\n        console.log('onChangedHandler  ->  Field-Name / value/ check ', inputIdentifier, ev.target.value);\r\n\r\n        const updatedForm = {\r\n           ...this.state.contactForm,\r\n           [inputIdentifier]: {\r\n               ...this.state.contactForm[inputIdentifier],\r\n               value: ev.target.value,\r\n               valid: this.checkValidation(ev.target.value, this.state.contactForm[inputIdentifier].validation),\r\n               touched: true\r\n           }\r\n        };\r\n        \r\n        console.log('---- updatedForm ----', updatedForm);\r\n        this.setState({contactForm: updatedForm})\r\n\r\n        \r\n    };\r\n\r\n    onChangedHandlerRadio = (ev) => {\r\n        console.log('radio ev', ev.target.value);\r\n        this.setState({ gender: ev.target.value });\r\n    };\r\n\r\n    checkValidation(value, rules) {\r\n        console.log('checkValidation value/rules', value, rules);\r\n        let isValid = false;\r\n        \r\n        if (!rules) {\r\n            console.log('--ruels--');\r\n            return true;\r\n        }\r\n\r\n        if(rules.required) {\r\n            isValid = value.trim() !== '' ? true : false;\r\n\r\n            if (rules.isEmail) {\r\n                console.log(' --Mail-- ');\r\n                const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n                isValid = value.search(pattern) == 0 ? true : false;\r\n            }\r\n            if (rules.isNumeric) {\r\n                console.log(' --isNumeric-- ');\r\n                const pattern = /^\\d+$/;\r\n                isValid = value.search(pattern) == 0 ? true : false;\r\n            }\r\n            if (rules.isString) {\r\n                console.log(' --isString-- ');\r\n                const pattern = /^[a-zA-Z\\s]+$/;\r\n                isValid = value.search(pattern) == 0 ? true : false;\r\n\r\n            }\r\n        } else {\r\n            isValid = '';\r\n        }\r\n        console.log('---isValid--- ',isValid);\r\n        \r\n        return isValid;\r\n    }\r\n    \r\n    async onSubmitHandler(ev) {\r\n\r\n        ev.preventDefault();\r\n\r\n        let formIsValid = false;\r\n        let formInValid = false;\r\n        const formData = {};\r\n        let formInput;\r\n        \r\n        for (let formEl in this.state.contactForm) {\r\n            if (this.state.contactForm.hasOwnProperty(formEl)) {\r\n                console.log('Name: ', this.state.contactForm[formEl].elConfig.name);\r\n\r\n                formInput = this.state.contactForm[formEl];\r\n                formData[formEl] = formInput.value;\r\n\r\n                if(formInput.validation.required) {\r\n\r\n                    if (formInput.valid) {\r\n                        console.log('--- Input Feld is Valid--- OK');\r\n                        formIsValid = true;\r\n                    } else {\r\n                        formInValid = true;\r\n                        this.formInputError(formInput);\r\n                        console.log('--- Input Feld is InValid--- ERROR SHOW');\r\n                    }\r\n                } else {\r\n                    formIsValid = true;\r\n                    console.log('--- NOT  Required --- OK');\r\n                }\r\n            }\r\n        }\r\n\r\n        if(!formInValid) {\r\n            console.log('--- FORM SEND ---');\r\n        } else {\r\n            console.log('--- FORM NOT SEND  show error---');\r\n        }\r\n\r\n        formData['gender'] = this.state.gender;\r\n        console.log('------ formData ------', formData);\r\n\r\n        const form = await axios.post('/api/send_email', {\r\n            formData\r\n        });\r\n        \r\n        //this.sendEmail(formData);\r\n        // http://localhost:3002/send\r\n\r\n    /**  await  axios({\r\n          method: \"POST\",\r\n          url:\"/send\",\r\n          data:  formData,\r\n          headers: {\r\n             'Accept': 'application/json',\r\n             'Content-Type': 'application/json'\r\n          },\r\n        }).then((response)=>{\r\n            if (response.data.status === 'success'){\r\n                alert(\"=== Message Sent. ===\");\r\n              // this.resetForm()\r\n            }else if(response.data.status === 'fail'){\r\n                alert(\"=== Message failed to send. ===\")\r\n            }\r\n        }) **/\r\n        \r\n    };\r\n\r\n    resetForm(){\r\n        document.getElementById('contact-form').reset();\r\n    }\r\n\r\n    formInputError(inputEl){\r\n        let inputElement = document.getElementsByClassName('InputEl');\r\n        for(let item of inputElement) {\r\n            if(item.getAttribute('name') === inputEl.elConfig.name){\r\n                item.setAttribute('class','InputEl Invalid')\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const formElementsArry = [];\r\n        for (let key in this.state.contactForm) {\r\n            if (this.state.contactForm.hasOwnProperty(key)) {\r\n                formElementsArry.push({\r\n                    id: key,\r\n                    config: this.state.contactForm[key]\r\n                });\r\n            }\r\n        }\r\n        let form = (\r\n            <form>\r\n\r\n                <div className=\"CustomerSalutation\">\r\n                    <label className=\"Label\" htmlFor=\"\">Frau</label>\r\n                    <input type='radio' id='salutation_1' className='' name='Gender' value='Frau'\r\n                           checked={this.state.gender === 'Frau'} onChange = {(ev) => this.onChangedHandlerRadio(ev)} />\r\n\r\n                    <label className=\"Label\" htmlFor=\"\">Herr</label>\r\n                    <input type='radio' id='salutation_2'className=''  name='Gender' value='Herr'\r\n                           checked={this.state.gender === 'Herr'} onChange = {(ev) => this.onChangedHandlerRadio(ev)} />\r\n                </div>\r\n\r\n                {\r\n                    formElementsArry.map(formEl => (\r\n                        <Input\r\n                            key={formEl.id}\r\n                            elKey={formEl.id}\r\n                            elType={formEl.config.elType}\r\n                            elConfig={formEl.config.elConfig}\r\n                            value={formEl.config.value}\r\n                            invalid={formEl.config.valid}\r\n                            shouldValidate={formEl.config.validation}\r\n                            changed={ (ev) => this.onChangedHandler(ev,formEl.id)}\r\n                            label={formEl.config.label}\r\n\r\n                        />\r\n                    ))\r\n                }\r\n                <div>\r\n                    <p className=\"Hint\"> * Markierte Pflichtfelder bitte unbedingt ausf端llen </p>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        className=\"Button\"\r\n                        onClick={this.onSubmitHandler}\r\n                    >Absenden  <FontAwesomeIcon icon={faAngleDoubleRight}/> </Button>\r\n    \r\n                </div>\r\n            </form>\r\n        );\r\n\r\n        return (\r\n            <Media queries={{\r\n                small: \"(max-width: 599px)\",\r\n                medium: \"(min-width: 600px) and (max-width: 1199px)\",\r\n                large: \"(min-width: 1200px)\"\r\n            }}>\r\n                { matches => (\r\n                    <div className={ matches.large ? \"ContactForm\" : (matches.medium || matches.small) ? \"ContactForm_Mobile\" : null }>\r\n                       <h2 className=\"Subheadline\">Kontaktformular</h2>\r\n                        <p>Haben Sie eine Frage oder m旦chten Sie aus einem Grund Kontakt mit uns aufnehmen. Dann hinterlassen Sie uns einfach eine Nachricht. Wir freuen uns auf Sie und werden schnellstm旦glich einen Antwort geben.</p>\r\n                        <div className=\"Form\">\r\n                            {form}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </Media>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}