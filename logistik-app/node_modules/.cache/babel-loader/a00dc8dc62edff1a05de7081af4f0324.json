{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _defineProperty from \"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\src\\\\components\\\\molecules\\\\Login\\\\Authentication.js\";\nimport React, { useCallback, useContext, useState, useEffect } from 'react';\nimport { Redirect } from 'react-router';\nimport { connect } from \"react-redux\";\nimport './Authentication.scss';\nimport Input from '../../atoms/Form/Input/Input';\nimport Button from '../../atoms/Button/Button';\nimport Spinner from '../../atoms/Spinner/Spinner';\nimport * as actions from '../../../store/actions';\nimport config from '../../../store/firebaseConfig';\nimport { AuthContext } from \"../../../Login1/Auth\";\n\nvar Authentication = function Authentication(_ref) {\n  var history = _ref.history;\n\n  var _useState = useState({\n    email: {\n      elType: 'input',\n      elConfig: {\n        type: 'email',\n        placeholder: 'E-Mail-Adresse'\n      },\n      value: '',\n      validation: {\n        required: true,\n        isEmail: true\n      },\n      valid: false,\n      touched: false\n    },\n    password: {\n      elType: 'password',\n      elConfig: {\n        type: 'password',\n        placeholder: 'Passwort'\n      },\n      value: '',\n      validation: {\n        required: true,\n        minLength: 6\n      },\n      valid: false,\n      touched: false\n    }\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      loginForm = _useState2[0],\n      setLoginForm = _useState2[1];\n\n  var checkValidation = function checkValidation(value, rules) {\n    var isValid = true;\n\n    if (!rules) {\n      return true;\n    }\n\n    if (rules.required) {\n      isValid = value.trim() !== '' && isValid;\n    }\n\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n\n    if (rules.isEmail) {\n      var pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n      isValid = pattern.test(value) && isValid;\n    }\n\n    if (rules.isNumeric) {\n      var _pattern = /^\\d+$/;\n      isValid = _pattern.test(value) && isValid;\n    }\n\n    return isValid;\n  };\n\n  var inputChangedHandler = function inputChangedHandler(ev, formId) {\n    console.log(\"inputChangedHandler value - formId\", ev.target.value, formId); //touched, wenn user etwas eingegeben hat\n\n    var updatedControls = _objectSpread({}, loginForm, _defineProperty({}, formId, _objectSpread({}, loginForm[formId], {\n      value: ev.target.value,\n      valid: checkValidation(ev.target.value, loginForm[formId].validation),\n      touched: true\n    })));\n\n    console.log('updatedControls::', updatedControls);\n    setLoginForm(updatedControls);\n  };\n\n  var onSubmitFormHandler = useCallback(function _callee(event) {\n    var _event$target$element, email, password;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            event.preventDefault();\n            _event$target$element = event.target.elements[0].value, email = _event$target$element.email, password = _event$target$element.password;\n            console.log('event / element', event.target.elements, event.target.elements[0].value, event.target.elements[1].value);\n            _context.prev = 3;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(config.auth().signInWithEmailAndPassword(event.target.elements[0].value, event.target.elements[1].value));\n\n          case 6:\n            return _context.abrupt(\"return\", React.createElement(Redirect, {\n              to: \"/dashboard\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 107\n              },\n              __self: this\n            }));\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](3);\n            console.log(\"ERROR LOGIN: \", _context.t0);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, this, [[3, 9]]);\n  }, [history]);\n\n  var _useContext = useContext(AuthContext),\n      currentUser = _useContext.currentUser; // if(currentUser) {\n  //  return <Redirect to={\"/\"} />;\n  // }\n\n\n  var loginFormEl = [];\n  var errorMessage = null;\n\n  for (var key in loginForm) {\n    loginFormEl.push({\n      id: key,\n      config: loginForm[key]\n    });\n  }\n\n  var form = loginFormEl.map(function (formEl) {\n    return React.createElement(Input, {\n      elType: formEl.config.elType,\n      key: formEl.id,\n      elConfig: formEl.elConfig,\n      value: formEl.config.value,\n      invalid: !formEl.config.valid,\n      shouldValidate: formEl.config.validation,\n      touched: formEl.config.touched,\n      label: formEl.config.elConfig.placeholder,\n      changed: function changed(ev) {\n        return inputChangedHandler(ev, formEl.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    });\n  });\n  /**\r\n      if (props.loading) {\r\n          form = <Spinner/>\r\n      }\r\n  \r\n      if (props.error) {\r\n          errorMessage = (\r\n              <p>{props.error.message}</p>\r\n          )\r\n      }\r\n  \r\n  \r\n      if (props.isAuthenticated) {\r\n          authRedirect = <Redirect to=\"/\"/>\r\n      }\r\n  **/\n\n  var authRedirect = null;\n  return React.createElement(\"div\", {\n    className: \"Auth\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, authRedirect, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"Login \"), errorMessage, React.createElement(\"form\", {\n    onSubmit: function onSubmit(ev) {\n      return onSubmitFormHandler(ev);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, form, React.createElement(Button, {\n    type: \"submit\",\n    btnType: \"Primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, \"Anmelden \")));\n};\n/**\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.auth.loading,\r\n        error: state.auth.error,\r\n        isSignIn: state.auth.isSignIn,\r\n        isAuthenticated: state.auth.tokenId !== null\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (email, password) => dispatch(actions.auth(email, password))\r\n    };\r\n};\r\n**/\n//export default connect(mapStateToProps, mapDispatchToProps)(Authentication);\n\n\nexport default Authentication;","map":{"version":3,"sources":["C:/Users/natali.kaefer/Workspace/kaefer-logistik/logistik-app/src/components/molecules/Login/Authentication.js"],"names":["React","useCallback","useContext","useState","useEffect","Redirect","connect","Input","Button","Spinner","actions","config","AuthContext","Authentication","history","email","elType","elConfig","type","placeholder","value","validation","required","isEmail","valid","touched","password","minLength","loginForm","setLoginForm","checkValidation","rules","isValid","trim","length","maxLength","pattern","test","isNumeric","inputChangedHandler","ev","formId","console","log","target","updatedControls","onSubmitFormHandler","event","preventDefault","elements","auth","signInWithEmailAndPassword","currentUser","loginFormEl","errorMessage","key","push","id","form","map","formEl","authRedirect"],"mappings":"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","sourcesContent":["import React, { useCallback, useContext, useState, useEffect } from 'react';\r\nimport { Redirect } from 'react-router';\r\n\r\nimport {connect} from \"react-redux\";\r\n\r\nimport  './Authentication.scss';\r\nimport Input from '../../atoms/Form/Input/Input'\r\nimport Button from '../../atoms/Button/Button';\r\nimport Spinner from '../../atoms/Spinner/Spinner'\r\nimport * as actions from '../../../store/actions'\r\nimport config from '../../../store/firebaseConfig';\r\nimport { AuthContext } from \"../../../Login1/Auth\";\r\n\r\n\r\nconst Authentication = ({ history }) => {\r\n    const [loginForm, setLoginForm] = useState({\r\n        email: {\r\n            elType: 'input',\r\n            elConfig: {\r\n                type: 'email',\r\n                placeholder: 'E-Mail-Adresse'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                isEmail: true\r\n            },\r\n            valid: false,\r\n            touched: false\r\n\r\n        },\r\n        password: {\r\n            elType: 'password',\r\n            elConfig: {\r\n                type: 'password',\r\n                placeholder: 'Passwort'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 6\r\n            },\r\n\r\n            valid: false,\r\n            touched: false\r\n\r\n        }\r\n    });\r\n\r\n    const checkValidation = (value, rules) => {\r\n        let isValid = true;\r\n\r\n        if (!rules) {\r\n            return true;\r\n        }\r\n\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid\r\n        }\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid\r\n        }\r\n        if (rules.isEmail) {\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n        if (rules.isNumeric) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        return isValid;\r\n    };\r\n\r\n    const inputChangedHandler = (ev, formId) => {\r\n        console.log(\"inputChangedHandler value - formId\", ev.target.value, formId);\r\n\r\n        //touched, wenn user etwas eingegeben hat\r\n        const updatedControls = {\r\n            ...loginForm,\r\n            [formId]: {\r\n                ...loginForm[formId],\r\n                value: ev.target.value,\r\n                valid: checkValidation(ev.target.value, loginForm[formId].validation),\r\n                touched: true\r\n            }\r\n        };\r\n\r\n        console.log('updatedControls::',updatedControls);\r\n\r\n        setLoginForm(updatedControls);\r\n    };\r\n\r\n    const onSubmitFormHandler = useCallback(async event => {\r\n        event.preventDefault();\r\n        const { email, password } = event.target.elements[0].value;\r\n        console.log('event / element', event.target.elements, event.target.elements[0].value, event.target.elements[1].value);\r\n\r\n        try {\r\n            await config\r\n                .auth()\r\n                .signInWithEmailAndPassword(event.target.elements[0].value, event.target.elements[1].value);\r\n            //history.push('/dashboard');\r\n            return <Redirect to={\"/dashboard\"} />;\r\n        } catch (error) {\r\n            console.log(\"ERROR LOGIN: \", error);\r\n        }\r\n    }, [history]);\r\n\r\n\r\n    const { currentUser } = useContext(AuthContext);\r\n\r\n\r\n    // if(currentUser) {\r\n      //  return <Redirect to={\"/\"} />;\r\n    // }\r\n\r\n\r\n    const loginFormEl = [];\r\n    let errorMessage = null;\r\n\r\n    for (let key in loginForm) {\r\n        loginFormEl.push({\r\n            id: key,\r\n            config: loginForm[key]\r\n        });\r\n    }\r\n\r\n\r\n    let form = loginFormEl.map(formEl => (\r\n        <Input\r\n            elType={formEl.config.elType}\r\n            key={formEl.id}\r\n            elConfig={formEl.elConfig}\r\n            value={formEl.config.value}\r\n            invalid={!formEl.config.valid}\r\n            shouldValidate={formEl.config.validation}\r\n            touched={formEl.config.touched}\r\n            label={formEl.config.elConfig.placeholder}\r\n            changed={(ev) => inputChangedHandler(ev, formEl.id)}\r\n        />)\r\n    );\r\n/**\r\n    if (props.loading) {\r\n        form = <Spinner/>\r\n    }\r\n\r\n    if (props.error) {\r\n        errorMessage = (\r\n            <p>{props.error.message}</p>\r\n        )\r\n    }\r\n\r\n\r\n    if (props.isAuthenticated) {\r\n        authRedirect = <Redirect to=\"/\"/>\r\n    }\r\n**/\r\n    let authRedirect = null;\r\n\r\n    return (\r\n        <div className=\"Auth\">\r\n            {authRedirect}\r\n            <h3>Login </h3>\r\n            {errorMessage}\r\n            <form onSubmit={(ev) => onSubmitFormHandler(ev)}>\r\n                {form}\r\n                <Button\r\n                    type=\"submit\"\r\n                    btnType=\"Primary\"\r\n                >Anmelden </Button>\r\n            </form>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n/**\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.auth.loading,\r\n        error: state.auth.error,\r\n        isSignIn: state.auth.isSignIn,\r\n        isAuthenticated: state.auth.tokenId !== null\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (email, password) => dispatch(actions.auth(email, password))\r\n    };\r\n};\r\n**/\r\n\r\n//export default connect(mapStateToProps, mapDispatchToProps)(Authentication);\r\n\r\nexport default Authentication;\r\n"]},"metadata":{},"sourceType":"module"}