{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\src\\\\components\\\\molecules\\\\Login\\\\Authentication.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\nimport './Authentication.scss';\nimport Input from '../../atoms/Form/Input/Input';\nimport Button from '../../atoms/Button/Button';\nimport Spinner from '../../atoms/Spinner/Spinner';\nimport * as actions from '../../../store/actions';\n\nvar Authentication =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Authentication, _Component);\n\n  function Authentication() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Authentication);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Authentication)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loginForm: {\n        email: {\n          elType: 'input',\n          elConfig: {\n            type: 'email',\n            placeholder: 'E-Mail-Adresse'\n          },\n          value: '',\n          validation: {\n            required: true,\n            isEmail: true\n          },\n          valid: false,\n          touched: false\n        },\n        password: {\n          elType: 'password',\n          elConfig: {\n            type: 'password',\n            placeholder: 'Passwort'\n          },\n          value: '',\n          validation: {\n            required: true,\n            minLength: 6\n          },\n          valid: false,\n          touched: false\n        }\n      },\n      isSignup: true\n    };\n\n    _this.inputChangedHandler = function (ev, formId) {\n      console.log(\"inputChangedHandler value - formId\", ev.target.value, formId); //touched, wenn user etwas eingegeben hat\n\n      var updatedControls = _objectSpread({}, _this.state.loginForm, _defineProperty({}, formId, _objectSpread({}, _this.state.loginForm[formId], {\n        value: ev.target.value,\n        valid: _this.checkValidation(ev.target.value, _this.state.loginForm[formId].validation),\n        touched: true\n      })));\n\n      _this.setState({\n        loginForm: updatedControls\n      });\n    };\n\n    _this.onSubmitFormHandler = function (ev, props) {\n      ev.preventDefault();\n      console.log('PROPS :: ', props);\n      props.onAuth(_this.state.loginForm.email.value, _this.state.loginForm.password.value, _this.state.isSignup);\n    };\n\n    _this.switchAuthModeHandler = function () {\n      _this.setState(function (prevState) {\n        return {\n          isSignup: !prevState.isSignup\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Authentication, [{\n    key: \"checkValidation\",\n    value: function checkValidation(value, rules) {\n      var isValid = true;\n\n      if (!rules) {\n        return true;\n      }\n\n      if (rules.required) {\n        isValid = value.trim() !== '' && isValid;\n      }\n\n      if (rules.minLength) {\n        isValid = value.length >= rules.minLength && isValid;\n      }\n\n      if (rules.maxLength) {\n        isValid = value.length <= rules.maxLength && isValid;\n      }\n\n      if (rules.isEmail) {\n        var pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n        isValid = pattern.test(value) && isValid;\n      }\n\n      if (rules.isNumeric) {\n        var _pattern = /^\\d+$/;\n        isValid = _pattern.test(value) && isValid;\n      }\n\n      return isValid;\n    }\n  }, {\n    key: \"onClickedHandler\",\n    value: function onClickedHandler() {\n      console.log('onClickedHandler'); // this.setState(prevState => {\n      //    return {isSignup: !prevState.isSignup};\n      //  });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var loginFormEl = [];\n      var errorMessage = null;\n\n      for (var key in this.state.loginForm) {\n        loginFormEl.push({\n          id: key,\n          config: this.state.loginForm[key]\n        });\n      }\n\n      var form = loginFormEl.map(function (formEl) {\n        return React.createElement(Input, {\n          elType: formEl.config.elType,\n          key: formEl.id,\n          elConfig: formEl.elConfig,\n          value: formEl.config.value,\n          invalid: !formEl.config.valid,\n          shouldValidate: formEl.config.validation,\n          touched: formEl.config.touched,\n          label: formEl.config.elConfig.placeholder,\n          changed: function changed(ev) {\n            return _this2.inputChangedHandler(ev, formEl.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        });\n      });\n\n      if (this.props.loading) {\n        form = React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        });\n      }\n\n      if (this.props.error) {\n        errorMessage = React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, this.props.error.message);\n      }\n\n      var authRedirect = null;\n\n      if (this.props.isAuthenticated) {\n        authRedirect = React.createElement(Redirect, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"Auth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, authRedirect, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Login \"), errorMessage, React.createElement(\"form\", {\n        onSubmit: function onSubmit(ev) {\n          return _this2.onSubmitFormHandler(ev, _this2.props);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, form, React.createElement(Button, {\n        clicked: this.onClickedHandler,\n        btnType: \"Primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"Anmelden \")), React.createElement(Button, {\n        clicked: this.switchAuthModeHandler,\n        btnType: \"Danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"Switch to \", this.state.isSignup ? 'SIGN IN' : 'SIGN OUT'));\n    }\n  }]);\n\n  return Authentication;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loading: state.authorisation.loading,\n    error: state.authorisation.error,\n    isSignIn: state.authorisation.isSignIn,\n    isAuthenticated: state.authorisation.tokenId !== null\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onAuth: function onAuth(email, password, isSignup) {\n      return dispatch(actions.authorisation(email, password, isSignup));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Authentication);","map":{"version":3,"sources":["C:/Users/natali.kaefer/Workspace/kaefer-logistik/logistik-app/src/components/molecules/Login/Authentication.js"],"names":["React","Component","connect","Redirect","Input","Button","Spinner","actions","Authentication","state","loginForm","email","elType","elConfig","type","placeholder","value","validation","required","isEmail","valid","touched","password","minLength","isSignup","inputChangedHandler","ev","formId","console","log","target","updatedControls","checkValidation","setState","onSubmitFormHandler","props","preventDefault","onAuth","switchAuthModeHandler","prevState","rules","isValid","trim","length","maxLength","pattern","test","isNumeric","loginFormEl","errorMessage","key","push","id","config","form","map","formEl","loading","error","message","authRedirect","isAuthenticated","onClickedHandler","mapStateToProps","authorisation","isSignIn","tokenId","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport  './Authentication.scss';\r\nimport Input from '../../atoms/Form/Input/Input'\r\nimport Button from '../../atoms/Button/Button';\r\nimport Spinner from '../../atoms/Spinner/Spinner'\r\nimport * as actions from '../../../store/actions'\r\n\r\n\r\n\r\nclass Authentication extends Component {\r\n        \r\n        state = {\r\n            loginForm: {\r\n                email: {\r\n                    elType: 'input',\r\n                    elConfig: {\r\n                        type: 'email',\r\n                        placeholder: 'E-Mail-Adresse'\r\n                    },\r\n                    value: '',\r\n                    validation: {\r\n                        required: true,\r\n                        isEmail: true\r\n                    },\r\n                    valid: false,\r\n                    touched: false\r\n                    \r\n                },\r\n                password: {\r\n                    elType: 'password',\r\n                    elConfig: {\r\n                        type: 'password',\r\n                        placeholder: 'Passwort'\r\n                    },\r\n                    value: '',\r\n                    validation: {\r\n                        required: true,\r\n                        minLength: 6\r\n                    },\r\n                    valid: false,\r\n                    touched: false\r\n                  \r\n                }\r\n            },\r\n            isSignup: true\r\n        };\r\n    \r\n    \r\n    checkValidation(value, rules) {\r\n        let isValid = true;\r\n    \r\n        if (!rules) {\r\n            return true;\r\n        }\r\n    \r\n        if(rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n        if(rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid\r\n        }\r\n        if(rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength &&  isValid\r\n        }\r\n        if (rules.isEmail) {\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n        if (rules.isNumeric) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n    \r\n        return isValid;\r\n    }\r\n    \r\n    inputChangedHandler = (ev, formId) => {\r\n        console.log(\"inputChangedHandler value - formId\", ev.target.value, formId);\r\n        \r\n        //touched, wenn user etwas eingegeben hat\r\n        const updatedControls = {\r\n            ...this.state.loginForm,\r\n            [formId]: {\r\n                ...this.state.loginForm[formId],\r\n                value: ev.target.value,\r\n                valid: this.checkValidation(ev.target.value, this.state.loginForm[formId].validation),\r\n                touched: true\r\n            }\r\n        };\r\n    \r\n        this.setState({loginForm: updatedControls});\r\n    };\r\n    \r\n    onSubmitFormHandler = (ev, props) => {\r\n        ev.preventDefault();\r\n        console.log('PROPS :: ',  props);\r\n        props.onAuth(this.state.loginForm.email.value, this.state.loginForm.password.value, this.state.isSignup);\r\n        \r\n   \r\n    };\r\n    \r\n    onClickedHandler() {\r\n        console.log('onClickedHandler');\r\n       // this.setState(prevState => {\r\n        //    return {isSignup: !prevState.isSignup};\r\n      //  });\r\n    }\r\n    \r\n    switchAuthModeHandler = () => {\r\n        this.setState(prevState => {\r\n            return {isSignup: !prevState.isSignup}\r\n        })\r\n    };\r\n   \r\n    \r\n    render() {\r\n        const loginFormEl = [];\r\n        let errorMessage = null;\r\n        \r\n        for (let key in this.state.loginForm) {\r\n            loginFormEl.push({\r\n                id: key,\r\n                config: this.state.loginForm[key]\r\n            });\r\n        }\r\n        \r\n        \r\n        let form = loginFormEl.map( formEl => (\r\n                <Input\r\n                    elType={formEl.config.elType}\r\n                    key={formEl.id}\r\n                    elConfig={formEl.elConfig}\r\n                    value={formEl.config.value}\r\n                    invalid={!formEl.config.valid}\r\n                    shouldValidate={formEl.config.validation}\r\n                    touched={formEl.config.touched}\r\n                    label={formEl.config.elConfig.placeholder}\r\n                    changed={(ev) => this.inputChangedHandler(ev, formEl.id)}\r\n                />\r\n            )\r\n        );\r\n        \r\n        if(this.props.loading) {\r\n            form = <Spinner/>\r\n        }\r\n        \r\n       if(this.props.error){\r\n           errorMessage = (\r\n               <p>{this.props.error.message}</p>\r\n           )\r\n       }\r\n       \r\n       let authRedirect = null;\r\n       if (this.props.isAuthenticated) {\r\n            authRedirect = <Redirect to=\"/\"/>\r\n       }\r\n      \r\n        return (\r\n            <div className=\"Auth\">\r\n                {authRedirect}\r\n                <h3>Login </h3>\r\n                {errorMessage}\r\n                <form  onSubmit={(ev) => this.onSubmitFormHandler(ev, this.props)}>\r\n                    {form}\r\n                    <Button\r\n                        clicked={this.onClickedHandler}\r\n                        btnType=\"Primary\"\r\n                    >Anmelden </Button>\r\n                </form>\r\n                \r\n                <Button\r\n                    clicked={this.switchAuthModeHandler}\r\n                    btnType=\"Danger\">\r\n                    Switch to {this.state.isSignup ? 'SIGN IN' : 'SIGN OUT'}\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.authorisation.loading,\r\n        error: state.authorisation.error,\r\n        isSignIn: state.authorisation.isSignIn,\r\n        isAuthenticated: state.authorisation.tokenId !== null\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (email, password, isSignup) => dispatch(actions.authorisation(email, password, isSignup))\r\n    };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Authentication);\r\n"]},"metadata":{},"sourceType":"module"}