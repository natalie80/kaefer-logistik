{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from '../axios-instance';\nexport var authStart = function authStart() {\n  return {\n    type: actionTypes.AUTH_START\n  };\n}; //localId = userId, es ist derselbe\n\nexport var authSuccess = function authSuccess(token, user) {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    tokenId: token,\n    userId: user\n  };\n};\nexport var authFail = function authFail(error) {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport var logout = function logout() {\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport var checkAuthTimeout = function checkAuthTimeout(expirationTime) {\n  return function (dispatch) {\n    setTimeout(function () {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\nexport var setAuthRedirectPath = function setAuthRedirectPath(path) {\n  return {\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\n    path: path\n  };\n};\nexport var auth = function auth(email, password, isSignup) {\n  console.log('===auth===', email, password, isSignup);\n  var url = '';\n  return function (dispatch) {\n    dispatch(authStart());\n    var authData = {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    }; //let url = '/login.json';\n\n    url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAmhzVv7rmmeaHvUQTugalEmi1W4OSXjzQ'; // if (!isSignup) {\n    // url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAmhzVv7rmmeaHvUQTugalEmi1W4OSXjzQ';\n    //   url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=BrQw3KPslVf0iOgOHJN0tyG7dyA3';\n    //   }\n\n    axios.post(url, authData).then(function (response) {\n      console.log('response: ', response);\n      console.log('authData: ', authData);\n      dispatch(authSuccess(response.data.idToken, response.data.localId));\n      dispatch(checkAuthTimeout(response.data.expiresIn));\n    }).catch(function (error) {\n      console.log('error', error);\n      dispatch(authFail(error.response));\n    });\n  };\n};\nexport var authCheckState = function authCheckState() {\n  return function (dispatch) {\n    var token = localStorage.getItem('token');\n\n    if (!token) {\n      dispatch(logout());\n    } else {\n      var expirationDate = new Date(localStorage.getItem('expirationDate'));\n\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        var userId = localStorage.getItem('userId');\n        dispatch(authSuccess(token, userId));\n        dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n      }\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/natali.kaefer/Workspace/kaefer-logistik/logistik-app/src/store/actions/auth.js"],"names":["actionTypes","axios","authStart","type","AUTH_START","authSuccess","token","user","AUTH_SUCCESS","tokenId","userId","authFail","error","AUTH_FAIL","logout","AUTH_LOGOUT","checkAuthTimeout","expirationTime","dispatch","setTimeout","setAuthRedirectPath","path","SET_AUTH_REDIRECT_PATH","auth","email","password","isSignup","console","log","url","authData","returnSecureToken","post","then","response","data","idToken","localId","expiresIn","catch","authCheckState","localStorage","getItem","expirationDate","Date","getTime"],"mappings":"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","sourcesContent":["import * as actionTypes from './actionTypes';\r\nimport axios from '../axios-instance';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    }\r\n};\r\n\r\n//localId = userId, es ist derselbe\r\nexport const authSuccess = (token, user) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        tokenId: token,\r\n        userId: user\r\n    }\r\n};\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    }\r\n};\r\n\r\nexport const logout = () => {\r\n     return {\r\n         type: actionTypes.AUTH_LOGOUT\r\n     }\r\n};\r\n\r\nexport const checkAuthTimeout =  (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, expirationTime * 1000);\r\n    };\r\n};\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path: path\r\n    }\r\n};\r\n\r\nexport const  auth = (email, password, isSignup) => {\r\n\r\n    console.log('===auth===', email, password, isSignup);\r\n\r\n    let url = '';\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        \r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        };\r\n    \r\n        //let url = '/login.json';\r\n         url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAmhzVv7rmmeaHvUQTugalEmi1W4OSXjzQ';\r\n         \r\n       // if (!isSignup) {\r\n           // url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAmhzVv7rmmeaHvUQTugalEmi1W4OSXjzQ';\r\n         //   url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=BrQw3KPslVf0iOgOHJN0tyG7dyA3';\r\n     //   }\r\n        \r\n         axios.post(url, authData)\r\n            .then(response => {\r\n                console.log('response: ', response);\r\n                console.log('authData: ', authData);\r\n                dispatch(authSuccess(response.data.idToken, response.data.localId ));\r\n                dispatch(checkAuthTimeout(response.data.expiresIn));\r\n                \r\n            })\r\n            .catch(error => {\r\n                console.log('error', error);\r\n                dispatch(authFail(error.response ));\r\n            });\r\n    }\r\n};\r\n\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            dispatch(logout());\r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if (expirationDate <= new Date()) {\r\n                dispatch(logout());\r\n            } else {\r\n                const userId = localStorage.getItem('userId');\r\n                dispatch(authSuccess(token, userId));\r\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000 ));\r\n            }\r\n        }\r\n    };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}