{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\src\\\\components\\\\atoms\\\\Form\\\\Input\\\\Input.js\";\nimport React from 'react';\nimport './Input.scss';\n\nvar input = function input(props) {\n  var inputEl = null;\n  var inputStyle = \"InputEl\";\n  var radioStyle = props.elConfig.type === 'radio' ? 'CustomerSalutation' : '';\n  var validationError = null;\n\n  if (!props.invalid && props.value.trim() !== '' && props.shouldValidate.required) {\n    inputStyle = \"InputEl Invalid\";\n    validationError = React.createElement(\"p\", {\n      className: \"Error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, props.shouldValidate.error);\n  } else if (props.shouldValidate.required && props.value.trim() !== '') {\n    inputStyle = \" InputEl \";\n  }\n\n  switch (props.elType) {\n    case 'input':\n      inputEl = React.createElement(\"input\", Object.assign({\n        className: inputStyle,\n        onChange: props.changed\n      }, props.elConfig, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }));\n      break;\n\n    case 'select':\n      inputEl = React.createElement(\"select\", {\n        className: inputStyle,\n        onChange: props.changed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }));\n      break;\n\n    case 'textarea':\n      inputEl = React.createElement(\"textarea\", Object.assign({\n        className: inputStyle,\n        onChange: props.changed\n      }, props.elConfig, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }));\n      break;\n\n    case 'radio':\n      inputEl = React.createElement(\"input\", Object.assign({\n        className: inputStyle,\n        onChange: props.changed,\n        checked: props.checked\n      }, props.elConfig, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }));\n      break;\n\n    default:\n      inputEl = React.createElement(\"input\", Object.assign({\n        className: inputStyle,\n        onChange: props.changed\n      }, props.elConfig, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }));\n  }\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: radioStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"Label\",\n    htmlFor: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, props.label), inputEl, validationError));\n};\n\nexport default input;","map":{"version":3,"sources":["C:/Users/natali.kaefer/Workspace/kaefer-logistik/logistik-app/src/components/atoms/Form/Input/Input.js"],"names":["React","input","props","inputEl","inputStyle","radioStyle","elConfig","type","validationError","invalid","value","trim","shouldValidate","required","error","elType","changed","checked","label"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAS,cAAT;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AACrB,MAAIC,OAAO,GAAG,IAAd;AACA,MAAIC,UAAU,GAAG,SAAjB;AACA,MAAIC,UAAU,GAAGH,KAAK,CAACI,QAAN,CAAeC,IAAf,KAAwB,OAAxB,GAAkC,oBAAlC,GAAyD,EAA1E;AACA,MAAIC,eAAe,GAAG,IAAtB;;AAEA,MAAG,CAACN,KAAK,CAACO,OAAP,IAAkBP,KAAK,CAACQ,KAAN,CAAYC,IAAZ,OAAuB,EAAzC,IAA+CT,KAAK,CAACU,cAAN,CAAqBC,QAAvE,EAAiF;AAC7ET,IAAAA,UAAU,GAAG,iBAAb;AACAI,IAAAA,eAAe,GAAG;AAAG,MAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsBN,KAAK,CAACU,cAAN,CAAqBE,KAA3C,CAAlB;AACH,GAHD,MAGO,IAAGZ,KAAK,CAACU,cAAN,CAAqBC,QAArB,IAAiCX,KAAK,CAACQ,KAAN,CAAYC,IAAZ,OAAuB,EAA3D,EAA+D;AAClEP,IAAAA,UAAU,GAAG,WAAb;AACH;;AAED,UAAQF,KAAK,CAACa,MAAd;AACI,SAAM,OAAN;AACIZ,MAAAA,OAAO,GAAG;AACN,QAAA,SAAS,EAAIC,UADP;AAEN,QAAA,QAAQ,EAAEF,KAAK,CAACc;AAFV,SAGFd,KAAK,CAACI,QAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAV;AAMA;;AACJ,SAAM,QAAN;AACIH,MAAAA,OAAO,GACH;AACI,QAAA,SAAS,EAAIC,UADjB;AAEI,QAAA,QAAQ,EAAEF,KAAK,CAACc,OAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAII;AAAQ,QAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CADJ;AAUA;;AACJ,SAAM,UAAN;AACIb,MAAAA,OAAO,GAAG;AACN,QAAA,SAAS,EAAIC,UADP;AAEN,QAAA,QAAQ,EAAEF,KAAK,CAACc;AAFV,SAGFd,KAAK,CAACI,QAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAV;AAKA;;AACJ,SAAM,OAAN;AACIH,MAAAA,OAAO,GAAG;AACN,QAAA,SAAS,EAAIC,UADP;AAEN,QAAA,QAAQ,EAAEF,KAAK,CAACc,OAFV;AAGN,QAAA,OAAO,EAAEd,KAAK,CAACe;AAHT,SAIFf,KAAK,CAACI,QAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAV;AAOA;;AACJ;AACIH,MAAAA,OAAO,GAAG;AACN,QAAA,SAAS,EAAIC,UADP;AAEN,QAAA,QAAQ,EAAEF,KAAK,CAACc;AAFV,SAGFd,KAAK,CAACI,QAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAV;AAtCR;;AA6CA,SACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAED,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAyB,IAAA,OAAO,EAAC,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCH,KAAK,CAACgB,KAA3C,CADJ,EAEKf,OAFL,EAGMK,eAHN,CADJ,CADJ;AASH,CAnED;;AAqEA,eAAeP,KAAf","sourcesContent":["import React from 'react';\r\n\r\nimport   './Input.scss';\r\n\r\nconst input = (props) => {\r\n    let inputEl = null;\r\n    let inputStyle = \"InputEl\";\r\n    let radioStyle = props.elConfig.type === 'radio' ? 'CustomerSalutation' : '';\r\n    let validationError = null;\r\n\r\n    if(!props.invalid && props.value.trim() !== '' && props.shouldValidate.required) {\r\n        inputStyle = \"InputEl Invalid\";\r\n        validationError = <p className='Error'>{props.shouldValidate.error}</p>;\r\n    } else if(props.shouldValidate.required && props.value.trim() !== '') {\r\n        inputStyle = \" InputEl \";\r\n    }\r\n    \r\n    switch (props.elType) {\r\n        case ('input') :\r\n            inputEl = <input\r\n                className = {inputStyle}\r\n                onChange={props.changed}\r\n                {...props.elConfig}\r\n\r\n            />;\r\n            break;\r\n        case ('select') :\r\n            inputEl = (\r\n                <select\r\n                    className = {inputStyle}\r\n                    onChange={props.changed}\r\n                >\r\n                    <option value=\"\">\r\n                    \r\n                    </option>\r\n                </select>\r\n            );\r\n            break;\r\n        case ('textarea') :\r\n            inputEl = <textarea\r\n                className = {inputStyle}\r\n                onChange={props.changed}\r\n                {...props.elConfig}\r\n            />;\r\n            break;\r\n        case ('radio') :\r\n            inputEl = <input\r\n                className = {inputStyle}\r\n                onChange={props.changed}\r\n                checked={props.checked}\r\n                {...props.elConfig}\r\n\r\n            />;\r\n            break;\r\n        default:\r\n            inputEl = <input\r\n                className = {inputStyle}\r\n                onChange={props.changed}\r\n                {...props.elConfig}\r\n            />\r\n    }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <div className={radioStyle}>\r\n                <label className=\"Label\" htmlFor=\"\">{props.label}</label>\r\n                {inputEl}\r\n                 {validationError}\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default input;"]},"metadata":{},"sourceType":"module"}