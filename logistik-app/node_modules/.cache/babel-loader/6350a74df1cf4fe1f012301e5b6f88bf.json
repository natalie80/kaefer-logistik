{"ast":null,"code":"import*as actionTypes from'./actionTypes';import axios from'../axios-instance';export var authStart=function authStart(){return{type:actionTypes.AUTH_START};};//localId = userId, es ist derselbe\nexport var authSuccess=function authSuccess(token,user){return{type:actionTypes.AUTH_SUCCESS,tokenId:token,userId:user};};export var authFail=function authFail(error){return{type:actionTypes.AUTH_FAIL,error:error};};export var logout=function logout(){return{type:actionTypes.AUTH_LOGOUT};};export var checkAuthTimeout=function checkAuthTimeout(expirationTime){return function(dispatch){setTimeout(function(){dispatch(logout());},expirationTime*1000);};};export var setAuthRedirectPath=function setAuthRedirectPath(path){return{type:actionTypes.SET_AUTH_REDIRECT_PATH,path:path};};export var auth=function auth(email,password,isSignup){var url='';return function(dispatch){dispatch(authStart());var authData={email:email,password:password,returnSecureToken:true};//let url = '/login.json';\nurl='https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAmhzVv7rmmeaHvUQTugalEmi1W4OSXjzQ';if(!isSignup){url='https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAmhzVv7rmmeaHvUQTugalEmi1W4OSXjzQ';}axios.post(url,authData).then(function(response){console.log('response: ',response);console.log('authData: ',authData);dispatch(authSuccess(response.data.idToken,response.data.localId));dispatch(checkAuthTimeout(response.data.expiresIn));}).catch(function(error){console.log('error',error);dispatch(authFail(error.response));});};};","map":{"version":3,"sources":["C:/Users/natali.kaefer/Workspace/kaefer-logistik/logistik-app/src/store/actions/auth.js"],"names":["actionTypes","axios","authStart","type","AUTH_START","authSuccess","token","user","AUTH_SUCCESS","tokenId","userId","authFail","error","AUTH_FAIL","logout","AUTH_LOGOUT","checkAuthTimeout","expirationTime","dispatch","setTimeout","setAuthRedirectPath","path","SET_AUTH_REDIRECT_PATH","auth","email","password","isSignup","url","authData","returnSecureToken","post","then","response","console","log","data","idToken","localId","expiresIn","catch"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,WAAZ,KAA6B,eAA7B,CACA,MAAOC,CAAAA,KAAP,KAAkB,mBAAlB,CAEA,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CAC3B,MAAO,CACHC,IAAI,CAAEH,WAAW,CAACI,UADf,CAAP,CAGH,CAJM,CAMP;AACA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAQC,IAAR,CAAiB,CACxC,MAAO,CACHJ,IAAI,CAAEH,WAAW,CAACQ,YADf,CAEHC,OAAO,CAAEH,KAFN,CAGHI,MAAM,CAAEH,IAHL,CAAP,CAKH,CANM,CAQP,MAAO,IAAMI,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAW,CAC/B,MAAO,CACHT,IAAI,CAAEH,WAAW,CAACa,SADf,CAEHD,KAAK,CAAEA,KAFJ,CAAP,CAIH,CALM,CAOP,MAAO,IAAME,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACvB,MAAO,CACHX,IAAI,CAAEH,WAAW,CAACe,WADf,CAAP,CAGJ,CAJM,CAMP,MAAO,IAAMC,CAAAA,gBAAgB,CAAI,QAApBA,CAAAA,gBAAoB,CAACC,cAAD,CAAoB,CACjD,MAAO,UAAAC,QAAQ,CAAI,CACfC,UAAU,CAAC,UAAM,CACbD,QAAQ,CAACJ,MAAM,EAAP,CAAR,CACH,CAFS,CAEPG,cAAc,CAAG,IAFV,CAAV,CAGH,CAJD,CAKH,CANM,CAQP,MAAO,IAAMG,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,IAAD,CAAU,CACzC,MAAO,CACHlB,IAAI,CAAEH,WAAW,CAACsB,sBADf,CAEHD,IAAI,CAAEA,IAFH,CAAP,CAIH,CALM,CAOP,MAAO,IAAOE,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACC,KAAD,CAAQC,QAAR,CAAkBC,QAAlB,CAA+B,CAChD,GAAIC,CAAAA,GAAG,CAAG,EAAV,CACA,MAAO,UAAAT,QAAQ,CAAI,CACfA,QAAQ,CAAChB,SAAS,EAAV,CAAR,CAEA,GAAM0B,CAAAA,QAAQ,CAAG,CACbJ,KAAK,CAAEA,KADM,CAEbC,QAAQ,CAAEA,QAFG,CAGbI,iBAAiB,CAAE,IAHN,CAAjB,CAMA;AACCF,GAAG,CAAG,uGAAN,CAED,GAAI,CAACD,QAAL,CAAe,CACXC,GAAG,CAAG,mHAAN,CACH,CAEA1B,KAAK,CAAC6B,IAAN,CAAWH,GAAX,CAAgBC,QAAhB,EACIG,IADJ,CACS,SAAAC,QAAQ,CAAI,CACdC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAA0BF,QAA1B,EACAC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAA0BN,QAA1B,EACAV,QAAQ,CAACb,WAAW,CAAC2B,QAAQ,CAACG,IAAT,CAAcC,OAAf,CAAwBJ,QAAQ,CAACG,IAAT,CAAcE,OAAtC,CAAZ,CAAR,CACAnB,QAAQ,CAACF,gBAAgB,CAACgB,QAAQ,CAACG,IAAT,CAAcG,SAAf,CAAjB,CAAR,CAEH,CAPJ,EAQIC,KARJ,CAQU,SAAA3B,KAAK,CAAI,CACZqB,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAqBtB,KAArB,EACAM,QAAQ,CAACP,QAAQ,CAACC,KAAK,CAACoB,QAAP,CAAT,CAAR,CACH,CAXJ,EAYJ,CA5BD,CA6BH,CA/BM","sourcesContent":["import * as actionTypes from './actionTypes';\r\nimport axios from '../axios-instance';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    }\r\n};\r\n\r\n//localId = userId, es ist derselbe\r\nexport const authSuccess = (token, user) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        tokenId: token,\r\n        userId: user\r\n    }\r\n};\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    }\r\n};\r\n\r\nexport const logout = () => {\r\n     return {\r\n         type: actionTypes.AUTH_LOGOUT\r\n     }\r\n};\r\n\r\nexport const checkAuthTimeout =  (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, expirationTime * 1000);\r\n    };\r\n};\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path: path\r\n    }\r\n};\r\n\r\nexport const  auth = (email, password, isSignup) => {\r\n    let url = '';\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        \r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        };\r\n    \r\n        //let url = '/login.json';\r\n         url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAmhzVv7rmmeaHvUQTugalEmi1W4OSXjzQ';\r\n         \r\n        if (!isSignup) {\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAmhzVv7rmmeaHvUQTugalEmi1W4OSXjzQ';\r\n        }\r\n        \r\n         axios.post(url, authData)\r\n            .then(response => {\r\n                console.log('response: ', response);\r\n                console.log('authData: ', authData);\r\n                dispatch(authSuccess(response.data.idToken, response.data.localId ));\r\n                dispatch(checkAuthTimeout(response.data.expiresIn));\r\n                \r\n            })\r\n            .catch(error => {\r\n                console.log('error', error);\r\n                dispatch(authFail(error.response ));\r\n            });\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}