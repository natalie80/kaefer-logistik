{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import{connect}from\"react-redux\";import{Redirect}from'react-router-dom';import'./Authentication.scss';import Input from'../../atoms/Form/Input/Input';import Button from'../../atoms/Button/Button';import Spinner from'../../atoms/Spinner/Spinner';import*as actions from'../../../store/actions';var Authentication=/*#__PURE__*/function(_Component){_inherits(Authentication,_Component);function Authentication(){var _getPrototypeOf2;var _this;_classCallCheck(this,Authentication);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Authentication)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={loginForm:{email:{elType:'input',elConfig:{type:'email',placeholder:'E-Mail-Adresse'},value:'',validation:{required:true,isEmail:true},valid:false,touched:false},password:{elType:'password',elConfig:{type:'password',placeholder:'Passwort'},value:'',validation:{required:true,minLength:6},valid:false,touched:false}},isSignup:true};_this.inputChangedHandler=function(ev,formId){console.log(\"inputChangedHandler value - formId\",ev.target.value,formId);//touched, wenn user etwas eingegeben hat\nvar updatedControls=_objectSpread({},_this.state.loginForm,_defineProperty({},formId,_objectSpread({},_this.state.loginForm[formId],{value:ev.target.value,valid:_this.checkValidation(ev.target.value,_this.state.loginForm[formId].validation),touched:true})));_this.setState({loginForm:updatedControls});};_this.onSubmitFormHandler=function(ev,props){ev.preventDefault();console.log('PROPS :: ',props);props.onAuth(_this.state.loginForm.email.value,_this.state.loginForm.password.value,_this.state.isSignup);};_this.switchAuthModeHandler=function(){_this.setState(function(prevState){return{isSignup:!prevState.isSignup};});};return _this;}_createClass(Authentication,[{key:\"checkValidation\",value:function checkValidation(value,rules){var isValid=true;if(!rules){return true;}if(rules.required){isValid=value.trim()!==''&&isValid;}if(rules.minLength){isValid=value.length>=rules.minLength&&isValid;}if(rules.maxLength){isValid=value.length<=rules.maxLength&&isValid;}if(rules.isEmail){var pattern=/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;isValid=pattern.test(value)&&isValid;}if(rules.isNumeric){var _pattern=/^\\d+$/;isValid=_pattern.test(value)&&isValid;}return isValid;}},{key:\"onClickedHandler\",value:function onClickedHandler(){console.log('onClickedHandler');// this.setState(prevState => {\n//    return {isSignup: !prevState.isSignup};\n//  });\n}},{key:\"render\",value:function render(){var _this2=this;var loginFormEl=[];var errorMessage=null;for(var key in this.state.loginForm){loginFormEl.push({id:key,config:this.state.loginForm[key]});}var form=loginFormEl.map(function(formEl){return React.createElement(Input,{elType:formEl.config.elType,key:formEl.id,elConfig:formEl.elConfig,value:formEl.config.value,invalid:!formEl.config.valid,shouldValidate:formEl.config.validation,touched:formEl.config.touched,label:formEl.config.elConfig.placeholder,changed:function changed(ev){return _this2.inputChangedHandler(ev,formEl.id);}});});if(this.props.loading){form=React.createElement(Spinner,null);}if(this.props.error){errorMessage=React.createElement(\"p\",null,this.props.error.message);}var authRedirect=null;if(this.props.isAuthenticated){authRedirect=React.createElement(Redirect,{to:\"/\"});}return React.createElement(\"div\",{className:\"Auth\"},authRedirect,React.createElement(\"h3\",null,\"Login \"),errorMessage,React.createElement(\"form\",{onSubmit:function onSubmit(ev){return _this2.onSubmitFormHandler(ev,_this2.props);}},form,React.createElement(Button,{clicked:this.onClickedHandler,btnType:\"Primary\"},\"Anmelden \")),React.createElement(Button,{clicked:this.switchAuthModeHandler,btnType:\"Danger\"},\"Switch to \",this.state.isSignup?'SIGN IN':'SIGN OUT'));}}]);return Authentication;}(Component);var mapStateToProps=function mapStateToProps(state){return{loading:state.auth.loading,error:state.auth.error,isSignIn:state.auth.isSignIn,isAuthenticated:state.auth.tokenId!==null};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onAuth:function onAuth(email,password,isSignup){return dispatch(actions.auth(email,password,isSignup));}};};export default connect(mapStateToProps,mapDispatchToProps)(Authentication);","map":{"version":3,"sources":["C:/Users/natali.kaefer/Workspace/kaefer-logistik/logistik-app/src/components/molecules/Login/Authentication.js"],"names":["React","Component","connect","Redirect","Input","Button","Spinner","actions","Authentication","state","loginForm","email","elType","elConfig","type","placeholder","value","validation","required","isEmail","valid","touched","password","minLength","isSignup","inputChangedHandler","ev","formId","console","log","target","updatedControls","checkValidation","setState","onSubmitFormHandler","props","preventDefault","onAuth","switchAuthModeHandler","prevState","rules","isValid","trim","length","maxLength","pattern","test","isNumeric","loginFormEl","errorMessage","key","push","id","config","form","map","formEl","loading","error","message","authRedirect","isAuthenticated","onClickedHandler","mapStateToProps","auth","isSignIn","tokenId","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport  './Authentication.scss';\r\nimport Input from '../../atoms/Form/Input/Input'\r\nimport Button from '../../atoms/Button/Button';\r\nimport Spinner from '../../atoms/Spinner/Spinner'\r\nimport * as actions from '../../../store/actions'\r\n\r\n\r\n\r\nclass Authentication extends Component {\r\n        \r\n        state = {\r\n            loginForm: {\r\n                email: {\r\n                    elType: 'input',\r\n                    elConfig: {\r\n                        type: 'email',\r\n                        placeholder: 'E-Mail-Adresse'\r\n                    },\r\n                    value: '',\r\n                    validation: {\r\n                        required: true,\r\n                        isEmail: true\r\n                    },\r\n                    valid: false,\r\n                    touched: false\r\n                    \r\n                },\r\n                password: {\r\n                    elType: 'password',\r\n                    elConfig: {\r\n                        type: 'password',\r\n                        placeholder: 'Passwort'\r\n                    },\r\n                    value: '',\r\n                    validation: {\r\n                        required: true,\r\n                        minLength: 6\r\n                    },\r\n                    valid: false,\r\n                    touched: false\r\n                  \r\n                }\r\n            },\r\n            isSignup: true\r\n        };\r\n    \r\n    \r\n    checkValidation(value, rules) {\r\n        let isValid = true;\r\n    \r\n        if (!rules) {\r\n            return true;\r\n        }\r\n    \r\n        if(rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n        if(rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid\r\n        }\r\n        if(rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength &&  isValid\r\n        }\r\n        if (rules.isEmail) {\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n        if (rules.isNumeric) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n    \r\n        return isValid;\r\n    }\r\n    \r\n    inputChangedHandler = (ev, formId) => {\r\n        console.log(\"inputChangedHandler value - formId\", ev.target.value, formId);\r\n        \r\n        //touched, wenn user etwas eingegeben hat\r\n        const updatedControls = {\r\n            ...this.state.loginForm,\r\n            [formId]: {\r\n                ...this.state.loginForm[formId],\r\n                value: ev.target.value,\r\n                valid: this.checkValidation(ev.target.value, this.state.loginForm[formId].validation),\r\n                touched: true\r\n            }\r\n        };\r\n    \r\n        this.setState({loginForm: updatedControls});\r\n    };\r\n    \r\n    onSubmitFormHandler = (ev, props) => {\r\n        ev.preventDefault();\r\n        console.log('PROPS :: ',  props);\r\n        props.onAuth(this.state.loginForm.email.value, this.state.loginForm.password.value, this.state.isSignup);\r\n        \r\n   \r\n    };\r\n    \r\n    onClickedHandler() {\r\n        console.log('onClickedHandler');\r\n       // this.setState(prevState => {\r\n        //    return {isSignup: !prevState.isSignup};\r\n      //  });\r\n    }\r\n    \r\n    switchAuthModeHandler = () => {\r\n        this.setState(prevState => {\r\n            return {isSignup: !prevState.isSignup}\r\n        })\r\n    };\r\n   \r\n    \r\n    render() {\r\n        const loginFormEl = [];\r\n        let errorMessage = null;\r\n        \r\n        for (let key in this.state.loginForm) {\r\n            loginFormEl.push({\r\n                id: key,\r\n                config: this.state.loginForm[key]\r\n            });\r\n        }\r\n        \r\n        \r\n        let form = loginFormEl.map( formEl => (\r\n                <Input\r\n                    elType={formEl.config.elType}\r\n                    key={formEl.id}\r\n                    elConfig={formEl.elConfig}\r\n                    value={formEl.config.value}\r\n                    invalid={!formEl.config.valid}\r\n                    shouldValidate={formEl.config.validation}\r\n                    touched={formEl.config.touched}\r\n                    label={formEl.config.elConfig.placeholder}\r\n                    changed={(ev) => this.inputChangedHandler(ev, formEl.id)}\r\n                />\r\n            )\r\n        );\r\n        \r\n        if(this.props.loading) {\r\n            form = <Spinner/>\r\n        }\r\n        \r\n       if(this.props.error){\r\n           errorMessage = (\r\n               <p>{this.props.error.message}</p>\r\n           )\r\n       }\r\n       \r\n       let authRedirect = null;\r\n       if (this.props.isAuthenticated) {\r\n            authRedirect = <Redirect to=\"/\"/>\r\n       }\r\n      \r\n        return (\r\n            <div className=\"Auth\">\r\n                {authRedirect}\r\n                <h3>Login </h3>\r\n                {errorMessage}\r\n                <form  onSubmit={(ev) => this.onSubmitFormHandler(ev, this.props)}>\r\n                    {form}\r\n                    <Button\r\n                        clicked={this.onClickedHandler}\r\n                        btnType=\"Primary\"\r\n                    >Anmelden </Button>\r\n                </form>\r\n                \r\n                <Button\r\n                    clicked={this.switchAuthModeHandler}\r\n                    btnType=\"Danger\">\r\n                    Switch to {this.state.isSignup ? 'SIGN IN' : 'SIGN OUT'}\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.auth.loading,\r\n        error: state.auth.error,\r\n        isSignIn: state.auth.isSignIn,\r\n        isAuthenticated: state.auth.tokenId !== null\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (email, password, isSignup) => dispatch(actions.auth(email, password, isSignup))\r\n    };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Authentication);\r\n"]},"metadata":{},"sourceType":"module"}