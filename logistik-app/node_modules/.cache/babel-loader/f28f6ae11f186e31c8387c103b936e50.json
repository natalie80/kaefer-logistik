{"ast":null,"code":"import'react-app-polyfill/ie11';import'react-app-polyfill/stable';import React from'react';import ReactDOM from'react-dom';import{BrowserRouter}from\"react-router-dom\";import{Provider}from'react-redux';import{createStore,applyMiddleware,compose}from\"redux\";// craete global state\nimport reduxThunk from'redux-thunk';// For asynchronous action, middleware libraries redux-thunk or redux-sage\nimport'./index.scss';import App from'./App';import*as serviceWorker from'./serviceWorker';import allReducer from'./store/reducers';var composeEnhancers=(process.env.NODE_ENV==='development'?window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__:null)||compose;// STORE -> GLOBALIZED STATE\n//use applyMiddleware to add the thunk middleware to the store\nvar mystore=createStore(allReducer,composeEnhancers(applyMiddleware(reduxThunk)));var app=React.createElement(Provider,{store:mystore},React.createElement(BrowserRouter,null,React.createElement(App,null)));ReactDOM.render(app,document.getElementById('root'));// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","map":{"version":3,"sources":["C:/Users/natali.kaefer/Workspace/kaefer-logistik/logistik-app/src/index.js"],"names":["React","ReactDOM","BrowserRouter","Provider","createStore","applyMiddleware","compose","reduxThunk","App","serviceWorker","allReducer","composeEnhancers","process","env","NODE_ENV","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","mystore","app","render","document","getElementById","unregister"],"mappings":"AAAA,MAAO,yBAAP,CACA,MAAO,2BAAP,CACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,OAASC,aAAT,KAA8B,kBAA9B,CACA,OAASC,QAAT,KAAyB,aAAzB,CACA,OAAQC,WAAR,CAAqBC,eAArB,CAAsCC,OAAtC,KAAoD,OAApD,CAA6D;AAC7D,MAAOC,CAAAA,UAAP,KAAuB,aAAvB,CAAuC;AAEvC,MAAO,cAAP,CACA,MAAOC,CAAAA,GAAP,KAAgB,OAAhB,CACA,MAAO,GAAKC,CAAAA,aAAZ,KAA+B,iBAA/B,CACA,MAAOC,CAAAA,UAAP,KAAuB,kBAAvB,CAEA,GAAMC,CAAAA,gBAAgB,CAAG,CAACC,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,aAAzB,CAAyCC,MAAM,CAACC,oCAAhD,CAAuF,IAAxF,GAAkGV,OAA3H,CAGA;AACA;AACA,GAAMW,CAAAA,OAAO,CAAGb,WAAW,CACvBM,UADuB,CAEvBC,gBAAgB,CAACN,eAAe,CAACE,UAAD,CAAhB,CAFO,CAA3B,CAMA,GAAMW,CAAAA,GAAG,CACL,oBAAC,QAAD,EAAU,KAAK,CAAED,OAAjB,EACI,oBAAC,aAAD,MACI,oBAAC,GAAD,MADJ,CADJ,CADJ,CAQAhB,QAAQ,CAACkB,MAAT,CAAgBD,GAAhB,CAAqBE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAArB,EAEA;AACA;AACA;AACAZ,aAAa,CAACa,UAAd","sourcesContent":["import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport {createStore, applyMiddleware, compose} from \"redux\"; // craete global state\nimport reduxThunk from 'redux-thunk';  // For asynchronous action, middleware libraries redux-thunk or redux-sage\n\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport allReducer from './store/reducers';\n\nconst composeEnhancers = (process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null ) || compose;\n\n\n// STORE -> GLOBALIZED STATE\n//use applyMiddleware to add the thunk middleware to the store\nconst mystore = createStore (\n    allReducer,\n    composeEnhancers(applyMiddleware(reduxThunk))\n);\n\n\nconst app = (\n    <Provider store={mystore}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}