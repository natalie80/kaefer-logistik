{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _defineProperty from \"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\natali.kaefer\\\\Workspace\\\\kaefer-logistik\\\\logistik-app\\\\src\\\\components\\\\molecules\\\\Login\\\\Authentication.js\";\nimport React, { useCallback, useContext, useState, useEffect } from 'react';\nimport { Redirect } from 'react-router';\nimport { connect } from \"react-redux\";\nimport './Authentication.scss';\nimport Input from '../../atoms/Form/Input/Input';\nimport Button from '../../atoms/Button/Button';\nimport Spinner from '../../atoms/Spinner/Spinner';\nimport * as actions from '../../../store/actions';\nimport config from '../../../store/firebaseConfig';\nimport { AuthContext } from \"../../../Login1/Auth\";\n\nvar Authentication = function Authentication(_ref, props) {\n  var history = _ref.history;\n\n  var _useState = useState({\n    email: {\n      elType: 'input',\n      elConfig: {\n        type: 'email',\n        placeholder: 'E-Mail-Adresse'\n      },\n      value: '',\n      validation: {\n        required: true,\n        isEmail: true\n      },\n      valid: false,\n      touched: false\n    },\n    password: {\n      elType: 'password',\n      elConfig: {\n        type: 'password',\n        placeholder: 'Passwort'\n      },\n      value: '',\n      validation: {\n        required: true,\n        minLength: 6\n      },\n      valid: false,\n      touched: false\n    }\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      loginForm = _useState2[0],\n      setLoginForm = _useState2[1];\n\n  useEffect(function () {}, []);\n\n  var checkValidation = function checkValidation(value, rules) {\n    var isValid = true;\n\n    if (!rules) {\n      return true;\n    }\n\n    if (rules.required) {\n      isValid = value.trim() !== '' && isValid;\n    }\n\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n\n    if (rules.isEmail) {\n      var pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n      isValid = pattern.test(value) && isValid;\n    }\n\n    if (rules.isNumeric) {\n      var _pattern = /^\\d+$/;\n      isValid = _pattern.test(value) && isValid;\n    }\n\n    return isValid;\n  };\n\n  var inputChangedHandler = function inputChangedHandler(ev, formId) {\n    console.log(\"inputChangedHandler value - formId\", ev.target.value, formId); //touched, wenn user etwas eingegeben hat\n\n    var updatedControls = _objectSpread({}, loginForm, _defineProperty({}, formId, _objectSpread({}, loginForm[formId], {\n      value: ev.target.value,\n      valid: checkValidation(ev.target.value, loginForm[formId].validation),\n      touched: true\n    })));\n\n    console.log('updatedControls::', updatedControls);\n    setLoginForm(updatedControls);\n  };\n\n  var submitHandler = function submitHandler(event) {\n    event.preventDefault();\n    props.onAuth(loginForm.email.value, loginForm.password.value);\n  };\n\n  var onSubmitFormHandler = (function _callee(event) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            event.preventDefault();\n            console.log('loginForm::', loginForm); // const {email, password} = event.target.elements;\n\n            console.log('mail: ', loginForm.email.value);\n            console.log('password: ', loginForm.password.value);\n            _context.prev = 4;\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(config.auth().signInWithEmailAndPassword(loginForm.email.value, loginForm.password.value));\n\n          case 7:\n            history.push('/dashboard');\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](4);\n            console.log(\"ERROR LOGIN: \", _context.t0);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[4, 10]]);\n  }, [history]); // const { currentUser } = useContext(AuthContext);\n  // if(currentUser) {\n  //    return <Redirect to={\"/\"} />;\n  // }\n\n  var loginFormEl = [];\n  var errorMessage = null;\n\n  for (var key in loginForm) {\n    loginFormEl.push({\n      id: key,\n      config: loginForm[key]\n    });\n  }\n\n  var form = loginFormEl.map(function (formEl) {\n    return React.createElement(Input, {\n      elType: formEl.config.elType,\n      key: formEl.id,\n      elConfig: formEl.elConfig,\n      value: formEl.config.value,\n      invalid: !formEl.config.valid,\n      shouldValidate: formEl.config.validation,\n      touched: formEl.config.touched,\n      label: formEl.config.elConfig.placeholder,\n      changed: function changed(ev) {\n        return inputChangedHandler(ev, formEl.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    });\n  });\n\n  if (props.loading) {\n    form = React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    });\n  }\n\n  if (props.error) {\n    errorMessage = React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, props.error.message);\n  }\n\n  var authRedirect = null;\n\n  if (props.isAuthenticated) {\n    authRedirect = React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"Auth\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, authRedirect, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, \"Login \"), errorMessage, React.createElement(\"form\", {\n    onSubmit: function onSubmit(ev) {\n      return onSubmitFormHandler(ev);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, form, React.createElement(Button, {\n    type: \"submit\",\n    btnType: \"Primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, \"Anmelden \")));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    isSignIn: state.auth.isSignIn,\n    isAuthenticated: state.auth.tokenId !== null\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onAuth: function onAuth(email, password) {\n      return dispatch(actions.auth(email, password));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Authentication);","map":{"version":3,"sources":["C:/Users/natali.kaefer/Workspace/kaefer-logistik/logistik-app/src/components/molecules/Login/Authentication.js"],"names":["React","useCallback","useContext","useState","useEffect","Redirect","connect","Input","Button","Spinner","actions","config","AuthContext","Authentication","props","history","email","elType","elConfig","type","placeholder","value","validation","required","isEmail","valid","touched","password","minLength","loginForm","setLoginForm","checkValidation","rules","isValid","trim","length","maxLength","pattern","test","isNumeric","inputChangedHandler","ev","formId","console","log","target","updatedControls","submitHandler","event","preventDefault","onAuth","onSubmitFormHandler","auth","signInWithEmailAndPassword","push","loginFormEl","errorMessage","key","id","form","map","formEl","loading","error","message","authRedirect","isAuthenticated","mapStateToProps","state","isSignIn","tokenId","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useCallback, useContext, useState, useEffect } from 'react';\r\nimport { Redirect } from 'react-router';\r\n\r\nimport {connect} from \"react-redux\";\r\n\r\nimport  './Authentication.scss';\r\nimport Input from '../../atoms/Form/Input/Input'\r\nimport Button from '../../atoms/Button/Button';\r\nimport Spinner from '../../atoms/Spinner/Spinner'\r\nimport * as actions from '../../../store/actions'\r\nimport config from '../../../store/firebaseConfig';\r\nimport { AuthContext } from \"../../../Login1/Auth\";\r\n\r\n\r\nconst Authentication = ({ history }, props) => {\r\n    const [loginForm, setLoginForm] = useState({\r\n        email: {\r\n            elType: 'input',\r\n            elConfig: {\r\n                type: 'email',\r\n                placeholder: 'E-Mail-Adresse'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                isEmail: true\r\n            },\r\n            valid: false,\r\n            touched: false\r\n\r\n        },\r\n        password: {\r\n            elType: 'password',\r\n            elConfig: {\r\n                type: 'password',\r\n                placeholder: 'Passwort'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 6\r\n            },\r\n\r\n            valid: false,\r\n            touched: false\r\n\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n    }, []);\r\n\r\n    const checkValidation = (value, rules) => {\r\n        let isValid = true;\r\n\r\n        if (!rules) {\r\n            return true;\r\n        }\r\n\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid\r\n        }\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid\r\n        }\r\n        if (rules.isEmail) {\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n        if (rules.isNumeric) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        return isValid;\r\n    };\r\n\r\n    const inputChangedHandler = (ev, formId) => {\r\n        console.log(\"inputChangedHandler value - formId\", ev.target.value, formId);\r\n\r\n        //touched, wenn user etwas eingegeben hat\r\n        const updatedControls = {\r\n            ...loginForm,\r\n            [formId]: {\r\n                ...loginForm[formId],\r\n                value: ev.target.value,\r\n                valid: checkValidation(ev.target.value, loginForm[formId].validation),\r\n                touched: true\r\n            }\r\n        };\r\nconsole.log('updatedControls::',updatedControls);\r\n        setLoginForm(updatedControls);\r\n\r\n    };\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        props.onAuth(loginForm.email.value, loginForm.password.value);\r\n    };\r\n\r\n    const onSubmitFormHandler = (async event => {\r\n        event.preventDefault();\r\n\r\n        console.log('loginForm::',loginForm);\r\n       // const {email, password} = event.target.elements;\r\n        console.log('mail: ', loginForm.email.value);\r\n        console.log('password: ', loginForm.password.value);\r\n        try {\r\n            await config\r\n                .auth()\r\n                .signInWithEmailAndPassword(loginForm.email.value, loginForm.password.value);\r\n            history.push('/dashboard');\r\n        } catch (error) {\r\n            console.log(\"ERROR LOGIN: \", error);\r\n        }\r\n    }, [history]);\r\n\r\n    // const { currentUser } = useContext(AuthContext);\r\n\r\n    // if(currentUser) {\r\n    //    return <Redirect to={\"/\"} />;\r\n    // }\r\n\r\n\r\n    const loginFormEl = [];\r\n    let errorMessage = null;\r\n\r\n    for (let key in loginForm) {\r\n        loginFormEl.push({\r\n            id: key,\r\n            config: loginForm[key]\r\n        });\r\n    }\r\n\r\n\r\n    let form = loginFormEl.map(formEl => (\r\n        <Input\r\n            elType={formEl.config.elType}\r\n            key={formEl.id}\r\n            elConfig={formEl.elConfig}\r\n            value={formEl.config.value}\r\n            invalid={!formEl.config.valid}\r\n            shouldValidate={formEl.config.validation}\r\n            touched={formEl.config.touched}\r\n            label={formEl.config.elConfig.placeholder}\r\n            changed={(ev) => inputChangedHandler(ev, formEl.id)}\r\n        />)\r\n    );\r\n\r\n    if (props.loading) {\r\n        form = <Spinner/>\r\n    }\r\n\r\n    if (props.error) {\r\n        errorMessage = (\r\n            <p>{props.error.message}</p>\r\n        )\r\n    }\r\n\r\n    let authRedirect = null;\r\n    if (props.isAuthenticated) {\r\n        authRedirect = <Redirect to=\"/\"/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"Auth\">\r\n            {authRedirect}\r\n            <h3>Login </h3>\r\n            {errorMessage}\r\n            <form onSubmit={(ev) => onSubmitFormHandler(ev)}>\r\n                {form}\r\n                <Button\r\n                    type=\"submit\"\r\n                    btnType=\"Primary\"\r\n                >Anmelden </Button>\r\n            </form>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.auth.loading,\r\n        error: state.auth.error,\r\n        isSignIn: state.auth.isSignIn,\r\n        isAuthenticated: state.auth.tokenId !== null\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (email, password) => dispatch(actions.auth(email, password))\r\n    };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Authentication);\r\n"]},"metadata":{},"sourceType":"module"}